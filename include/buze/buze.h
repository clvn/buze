/* autogenerated by zidl 2 */
#if !defined(__buze_H)
#define __buze_H

#if defined(__cplusplus)
extern "C" {
#endif

#include "zzub/types.h"

typedef struct buze_event_data_change_pattern_order buze_event_data_change_pattern_order_t;
typedef struct buze_event_data_change_pattern_row buze_event_data_change_pattern_row_t;
typedef struct buze_event_data_show_machine_parameter buze_event_data_show_machine_parameter_t;
typedef struct buze_event_data_show_pattern buze_event_data_show_pattern_t;
typedef struct buze_event_data_show_pattern_format buze_event_data_show_pattern_format_t;
typedef struct buze_event_data_show_properties buze_event_data_show_properties_t;
typedef struct buze_event_data buze_event_data_t;

#if !defined(NO_BUZE_APPLICATION_TYPE)
typedef struct _buze_application buze_application_t;
#endif

#if !defined(NO_BUZE_MAIN_FRAME_TYPE)
typedef struct _buze_main_frame buze_main_frame_t;
#endif

#if !defined(NO_BUZE_WINDOW_FACTORY_TYPE)
typedef struct _buze_window_factory buze_window_factory_t;
#endif

#if !defined(NO_BUZE_WINDOW_TYPE)
typedef struct _buze_window buze_window_t;
#endif

#if !defined(NO_BUZE_EVENT_HANDLER_TYPE)
typedef struct _buze_event_handler buze_event_handler_t;
#endif

#if !defined(NO_BUZE_MESSAGE_FILTER_TYPE)
typedef struct _buze_message_filter buze_message_filter_t;
#endif

#if !defined(NO_BUZE_IDLE_HANDLER_TYPE)
typedef struct _buze_idle_handler buze_idle_handler_t;
#endif

#if !defined(NO_BUZE_MESSAGE_LOOP_TYPE)
typedef struct _buze_message_loop buze_message_loop_t;
#endif

#if !defined(NO_BUZE_HOST_MODULE_TYPE)
typedef struct _buze_host_module buze_host_module_t;
#endif

#if !defined(NO_BUZE_DOCUMENT_TYPE)
typedef struct _buze_document buze_document_t;
#endif

#if !defined(NO_BUZE_PLUGIN_INDEX_ITEM_TYPE)
typedef struct _buze_plugin_index_item buze_plugin_index_item_t;
#endif

#if !defined(NO_BUZE_CONFIGURATION_TYPE)
typedef struct _buze_configuration buze_configuration_t;
#endif

enum {
  buze_version = 0x1,
};

enum buze_event_type {
  buze_event_type_update_new_document = 0x2000,
  buze_event_type_update_pre_save_document = 0x2001,
  buze_event_type_update_post_save_document = 0x2002,
  buze_event_type_update_pre_clear_document = 0x2003,
  buze_event_type_update_post_clear_document = 0x2004,
  buze_event_type_update_pre_open_document = 0x2005,
  buze_event_type_update_post_open_document = 0x2006,
  buze_event_type_update_pre_mixdown = 0x2007,
  buze_event_type_update_post_mixdown = 0x2008,
  buze_event_type_update_properties = 0x2009,
  buze_event_type_update_theme = 0x200a,
  buze_event_type_update_settings = 0x200b,
  buze_event_type_update_index = 0x200c,
  buze_event_type_change_pattern_order = 0x206c,
  buze_event_type_change_pattern_row = 0x206d,
  buze_event_type_show_parameter_view = 0x2328,
  buze_event_type_show_pattern_view = 0x2329,
  buze_event_type_show_pattern_format_view = 0x232a,
  buze_event_type_show_machine_view = 0x232b,
  buze_event_type_show_wavetable_view = 0x232c,
  buze_event_type_show_analyzer = 0x232e,
  buze_event_type_show_comment_view = 0x232f,
  buze_event_type_show_cpu_view = 0x2330,
  buze_event_type_show_filebrowser = 0x2331,
  buze_event_type_show_help_view = 0x2332,
  buze_event_type_show_history = 0x2333,
  buze_event_type_show_preferences = 0x2334,
  buze_event_type_show_properties = 0x232d,
  buze_event_type_show_all_machines = 0x2335,
};

enum buze_property_type {
  buze_property_type_plugin = 0x0,
  buze_property_type_connection = 0x1,
  buze_property_type_pattern = 0x2,
  buze_property_type_pattern_format = 0x3,
  buze_property_type_wave = 0x4,
  buze_property_type_wave_level = 0x5,
  buze_property_type_plugin_group = 0x6,
};

enum buze_path_type {
  buze_path_type_app_path = 0x0,
  buze_path_type_user_path = 0x1,
};

/* class ChangePatternOrder */

struct buze_event_data_change_pattern_order {
  int index;
};

/* class ChangePatternRow */

struct buze_event_data_change_pattern_row {
  int row;
};

/* class ShowMachineParameter */

struct buze_event_data_show_machine_parameter {
  zzub_plugin_t* plugin;
  int mode;
  int x;
  int y;
};

/* class ShowPattern */

struct buze_event_data_show_pattern {
  zzub_pattern_t* pattern;
  int change_pattern;
  int reset_stack;
  int editor_id;
};

/* class ShowPatternFormat */

struct buze_event_data_show_pattern_format {
  zzub_pattern_format_t* pattern_format;
};

/* class ShowProperties */

struct buze_event_data_show_properties {
  int type;
  buze_window_t* return_view;
  union {
    zzub_plugin_t* plugin;
    zzub_plugin_group_t* plugin_group;
    zzub_connection_t* connection;
    zzub_pattern_t* pattern;
    zzub_pattern_format_t* pattern_format;
    zzub_wave_t* wave;
    zzub_wavelevel_t* wavelevel;
  };
};

/* class EventData */

struct buze_event_data {
  union {
    buze_event_data_change_pattern_order_t change_pattern_order;
    buze_event_data_change_pattern_row_t change_pattern_row;
    buze_event_data_show_properties_t show_properties;
    buze_event_data_show_machine_parameter_t show_parameters;
    buze_event_data_show_pattern_t show_pattern;
    buze_event_data_show_pattern_format_t show_pattern_format;
  };
};

/* class Application */

buze_application_t* buze_application_create(buze_host_module_t* module, const char* globalPath, const char* userPath, const char* tempPath);
buze_host_module_t* buze_application_get_host_module(buze_application_t* application);
void buze_application_destroy(buze_application_t* application);
void buze_application_initialize(buze_application_t* application, zzub_player_t* player, zzub_audiodriver_t* driver);
int buze_application_open_midi_devices_from_config(buze_application_t* application);
int buze_application_create_audio_device_from_config(buze_application_t* application);
int buze_application_create_audio_device(buze_application_t* application, const char* outdevicename, const char* indevicename, int rate, int buffersize, int masterchannel, int save);
void buze_application_enable_silent_driver(buze_application_t* application, int enable);
zzub_audiodriver_t* buze_application_get_audio_driver(buze_application_t* application);
void buze_application_release_audio_driver(buze_application_t* application);
buze_configuration_t* buze_application_get_configuration(buze_application_t* application);
const char* buze_application_map_path(buze_application_t* application, const char* path, int type);
void buze_application_show_wait_window(buze_application_t* application);
void buze_application_set_wait_text(buze_application_t* application, const char* text);
void buze_application_hide_wait_window(buze_application_t* application, void* focusWnd);
unsigned int buze_application_get_theme_color(buze_application_t* application, const char* name);
const char* buze_application_get_theme_name(buze_application_t* application, int index);
int buze_application_get_theme_count(buze_application_t* application);
void buze_application_load_theme(buze_application_t* application, const char* name);

/* class MainFrame */

int buze_main_frame_initialize(buze_main_frame_t* main_frame, void* parentwnd, zzub_player_t* player);
void buze_main_frame_destroy(buze_main_frame_t* main_frame);
void buze_main_frame_register_window_factory(buze_main_frame_t* main_frame, buze_window_factory_t* info);
void* buze_main_frame_get_wnd(buze_main_frame_t* main_frame);
void buze_main_frame_add_timer_handler(buze_main_frame_t* main_frame, buze_window_t* wnd);
void buze_main_frame_remove_timer_handler(buze_main_frame_t* main_frame, buze_window_t* wnd);
void buze_main_frame_viewstack_insert(buze_main_frame_t* main_frame, buze_window_t* wnd);
void* buze_main_frame_get_accelerators(buze_main_frame_t* main_frame, const char* viewname);
buze_document_t* buze_main_frame_get_document(buze_main_frame_t* main_frame);
buze_application_t* buze_main_frame_get_application(buze_main_frame_t* main_frame);
zzub_player_t* buze_main_frame_get_player(buze_main_frame_t* main_frame);
buze_window_t* buze_main_frame_get_focused_view(buze_main_frame_t* main_frame);
int buze_main_frame_is_float_view(buze_main_frame_t* main_frame, buze_window_t* wnd);
void buze_main_frame_set_focus_to(buze_main_frame_t* main_frame, buze_window_t* wnd);
buze_window_t* buze_main_frame_get_view(buze_main_frame_t* main_frame, const char* viewname, int viewid);
buze_window_t* buze_main_frame_open_view(buze_main_frame_t* main_frame, const char* viewname, const char* label, int viewid, int x, int y);
void buze_main_frame_close_view(buze_main_frame_t* main_frame, buze_window_t* wnd);
const char* buze_main_frame_get_open_filename(buze_main_frame_t* main_frame);
const char* buze_main_frame_get_save_filename(buze_main_frame_t* main_frame);
void* buze_main_frame_get_plugin_menu_create(buze_main_frame_t* main_frame);
void* buze_main_frame_get_plugin_menu_insert_after(buze_main_frame_t* main_frame);
void* buze_main_frame_get_plugin_menu_insert_before(buze_main_frame_t* main_frame);
void* buze_main_frame_get_plugin_menu_replace(buze_main_frame_t* main_frame);
void* buze_main_frame_get_main_menu(buze_main_frame_t* main_frame);
void buze_main_frame_add_menu_keys(buze_main_frame_t* main_frame, const char* viewname, void* menu);
int buze_main_frame_register_event(buze_main_frame_t* main_frame);
unsigned short buze_main_frame_register_accelerator_event(buze_main_frame_t* main_frame, const char* viewname, const char* defaulthotkey, int evcode);
void buze_main_frame_register_accelerator(buze_main_frame_t* main_frame, const char* viewname, const char* name, const char* defaulthotkey, unsigned short id);
void buze_main_frame_show_plugin_parameters(buze_main_frame_t* main_frame, zzub_plugin_t* p, int modehint, int x, int y);
void* buze_main_frame_get_keyjazz_map(buze_main_frame_t* main_frame);
buze_window_t* buze_main_frame_get_view_by_wnd(buze_main_frame_t* main_frame, void* wnd);
const char* buze_main_frame_get_program_name(buze_main_frame_t* main_frame);

/* class WindowFactory */


/* class Window */

void* buze_window_get_wnd(buze_window_t* window);

/* class EventHandler */


/* class MessageFilter */


/* class IdleHandler */


/* class MessageLoop */


/* class HostModule */

 typedef int (*buze_callback_t)(buze_window_t* sender, int hint, void* param, void* tag);

/* class Document */

void buze_document_add_view(buze_document_t* document, buze_event_handler_t* view);
void buze_document_remove_view(buze_document_t* document, buze_event_handler_t* view);
void buze_document_notify_views(buze_document_t* document, buze_window_t* sender, int hint, void* param);
void buze_document_add_callback(buze_document_t* document, buze_callback_t callback, void* tag);
void buze_document_remove_callback(buze_document_t* document, buze_callback_t callback, void* tag);
int buze_document_get_octave(buze_document_t* document);
void buze_document_set_octave(buze_document_t* document, int oct);
int buze_document_get_plugin_non_song(buze_document_t* document, zzub_plugin_t* plugin);
void buze_document_set_plugin_non_song(buze_document_t* document, zzub_plugin_t* plugin, int state);
int buze_document_get_plugin_parameter_view_mode(buze_document_t* document, zzub_plugin_t* plugin);
void buze_document_set_plugin_parameter_view_mode(buze_document_t* document, zzub_plugin_t* plugin, int mode);
const char* buze_document_get_plugin_last_preset(buze_document_t* document, zzub_plugin_t* plugin);
void buze_document_set_plugin_last_preset(buze_document_t* document, zzub_plugin_t* plugin, const char* preset);
zzub_player_t* buze_document_get_player(buze_document_t* document);
const char* buze_document_get_stream_plugin_uri_for_file(buze_document_t* document, const char* path);
void buze_document_play_plugin_note(buze_document_t* document, zzub_plugin_t* plugin, int note, int prevnote);
void buze_document_play_stream(buze_document_t* document, int note, int offset, int length, const char* pluginuri, const char* dataurl);
void buze_document_keyjazz_key_down(buze_document_t* document, zzub_plugin_t* plugin, int wParam, int note);
int buze_document_keyjazz_key_up(buze_document_t* document, int wParam, int* note, zzub_plugin_t** plugin);
void buze_document_keyjazz_release(buze_document_t* document, int sendnoteoffs);
zzub_plugin_t* buze_document_get_stream_plugin(buze_document_t* document);
void buze_document_delete_stream_plugin(buze_document_t* document);
buze_configuration_t* buze_document_get_configuration(buze_document_t* document);
zzub_plugin_t* buze_document_get_solo_plugin(buze_document_t* document);
void buze_document_set_solo_plugin(buze_document_t* document, zzub_plugin_t* plugin, int state);
const char* buze_document_get_plugin_helpfile(buze_document_t* document, zzub_pluginloader_t* loader);
int buze_document_import_song(buze_document_t* document, const char* filename, int flags, float x, float y, char* errormessages, int outsize);
int buze_document_load_plugin_index(buze_document_t* document);
buze_plugin_index_item_t* buze_document_get_plugin_index_item_by_index(buze_document_t* document, int index);
buze_plugin_index_item_t* buze_document_get_plugin_index_root(buze_document_t* document);
int buze_document_is_dirty(buze_document_t* document);
void buze_document_set_current_file(buze_document_t* document, const char* fullpath);
const char* buze_document_get_current_filename(buze_document_t* document);
const char* buze_document_get_current_path(buze_document_t* document);
const char* buze_document_get_current_extension(buze_document_t* document);
void buze_document_clear_song(buze_document_t* document);
int buze_document_save_file(buze_document_t* document, const char* filename, int withwaves);
zzub_plugin_t* buze_document_create_plugin(buze_document_t* document, const char* uri, const char* instrumentname, float x, float y, zzub_plugin_group_t* plugingroup);
zzub_plugin_t* buze_document_create_plugin_between(buze_document_t* document, zzub_plugin_t* to_plugin, zzub_plugin_t* from_plugin, const char* uri, const char* instrumentname);
zzub_plugin_t* buze_document_create_plugin_before(buze_document_t* document, zzub_plugin_t* srcplugin, const char* uri, const char* instrumentname);
zzub_plugin_t* buze_document_create_plugin_after(buze_document_t* document, zzub_plugin_t* srcplugin, const char* uri, const char* instrumentname);
zzub_plugin_t* buze_document_create_plugin_replace(buze_document_t* document, zzub_plugin_t* srcplugin, const char* uri, const char* instrumentname);
void buze_document_create_default_document(buze_document_t* document);
zzub_pattern_format_t* buze_document_create_default_format(buze_document_t* document, zzub_plugin_t* plugin, int simple);
void buze_document_extend_pattern_format(buze_document_t* document, zzub_pattern_format_t* format, zzub_plugin_t* plugin, int simple);
void buze_document_delete_plugin_smart(buze_document_t* document, zzub_plugin_t* plugin);
zzub_plugin_t* buze_document_get_current_plugin(buze_document_t* document);
zzub_pattern_t* buze_document_get_current_pattern(buze_document_t* document);
zzub_pattern_format_t* buze_document_get_current_pattern_format(buze_document_t* document);
zzub_connection_t* buze_document_get_current_connection(buze_document_t* document);
zzub_wave_t* buze_document_get_current_wave(buze_document_t* document);
zzub_wavelevel_t* buze_document_get_current_wavelevel(buze_document_t* document);
int buze_document_import_wave(buze_document_t* document, const char* filename, zzub_wave_t* target);
int buze_document_get_current_order_index(buze_document_t* document);
int buze_document_get_current_order_pattern_row(buze_document_t* document);
int buze_document_get_current_pattern_row(buze_document_t* document);

/* class PluginIndexItem */

int buze_plugin_index_item_get_type(buze_plugin_index_item_t* plugin_index_item);
const char* buze_plugin_index_item_get_name(buze_plugin_index_item_t* plugin_index_item);
int buze_plugin_index_item_is_hidden(buze_plugin_index_item_t* plugin_index_item);
int buze_plugin_index_item_is_preloaded(buze_plugin_index_item_t* plugin_index_item);
const char* buze_plugin_index_item_get_filename(buze_plugin_index_item_t* plugin_index_item);
const char* buze_plugin_index_item_get_instrumentname(buze_plugin_index_item_t* plugin_index_item);
buze_plugin_index_item_t* buze_plugin_index_item_get_sub_item(buze_plugin_index_item_t* plugin_index_item, int index);
int buze_plugin_index_item_get_sub_item_count(buze_plugin_index_item_t* plugin_index_item);
const char* buze_plugin_index_item_get_separator_id(buze_plugin_index_item_t* plugin_index_item);

/* class Configuration */

void buze_configuration_add_sample_path(buze_configuration_t* configuration, const char* path);
void buze_configuration_remove_sample_path(buze_configuration_t* configuration, int index);
int buze_configuration_get_sample_path_count(buze_configuration_t* configuration);
const char* buze_configuration_get_sample_path(buze_configuration_t* configuration, int index);
const char* buze_configuration_get_fixed_width_font(buze_configuration_t* configuration);
int buze_configuration_get_toolbars_locked(buze_configuration_t* configuration);

#if defined(__cplusplus)
} // extern "C"
#endif

#endif // __buze_H
