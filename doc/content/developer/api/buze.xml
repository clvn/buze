<zidl>
  <namespace>
    <dlname>buzelib</dlname>
    <enum>
      <enumvalue>
        <name>
          buze_version
        </name>
        <value>
          1
        </value>
      </enumvalue>
    </enum>
    <enum>
      <name>buze_event_type_t</name>
      <description>These map 1:1 to CDocument::UpdateHint. Eventually this should become the only place to define gui events</description>
      <enumvalue>
        <name>
          buze_event_type_update_new_document
        </name>
        <value>
          8192
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_update_pre_save_document
        </name>
        <value>
          8193
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_update_post_save_document
        </name>
        <value>
          8194
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_update_pre_clear_document
        </name>
        <value>
          8195
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_update_post_clear_document
        </name>
        <value>
          8196
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_update_pre_open_document
        </name>
        <value>
          8197
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_update_post_open_document
        </name>
        <value>
          8198
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_update_pre_mixdown
        </name>
        <value>
          8199
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_update_post_mixdown
        </name>
        <value>
          8200
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_update_properties
        </name>
        <value>
          8201
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_update_theme
        </name>
        <value>
          8202
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_update_settings
        </name>
        <value>
          8203
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_update_index
        </name>
        <value>
          8204
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_show_parameter_view
        </name>
        <value>
          9000
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_show_pattern_view
        </name>
        <value>
          9001
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_show_pattern_format_view
        </name>
        <value>
          9002
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_show_machine_view
        </name>
        <value>
          9003
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_show_wavetable_view
        </name>
        <value>
          9004
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_show_analyzer
        </name>
        <value>
          9006
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_show_comment_view
        </name>
        <value>
          9007
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_show_cpu_view
        </name>
        <value>
          9008
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_show_filebrowser
        </name>
        <value>
          9009
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_show_help_view
        </name>
        <value>
          9010
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_show_history
        </name>
        <value>
          9011
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_show_preferences
        </name>
        <value>
          9012
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_show_properties
        </name>
        <value>
          9005
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_event_type_show_all_machines
        </name>
        <value>
          9013
        </value>
      </enumvalue>
    </enum>
    <enum>
      <name>buze_property_type_t</name>
      <enumvalue>
        <name>
          buze_property_type_plugin
        </name>
        <value>
          0
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_property_type_connection
        </name>
        <value>
          1
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_property_type_pattern
        </name>
        <value>
          2
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_property_type_pattern_format
        </name>
        <value>
          3
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_property_type_wave
        </name>
        <value>
          4
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_property_type_wave_level
        </name>
        <value>
          5
        </value>
      </enumvalue>
      <enumvalue>
        <name>
          buze_property_type_plugin_group
        </name>
        <value>
          6
        </value>
      </enumvalue>
    </enum>
    <class>
      <name>buze_event_data_t</name>
      <description>EventDatas can be passed as pvoid arguments to document_notify_views() and used by agreeing parties</description>
      <class>
        <name>buze_event_data_show_machine_parameter_t</name>
      </class>
      <class>
        <name>buze_event_data_show_pattern_t</name>
      </class>
      <class>
        <name>buze_event_data_show_pattern_format_t</name>
      </class>
      <class>
        <name>buze_event_data_show_properties_t</name>
      </class>
    </class>
    <class>
      <name>buze_application_t</name>
      <method>
        <name>buze_application_create</name>
        <description>Creates an application instance.</description>
        <returns>buze_application_t*</returns>
        <arguments>
          <argument>
            <type>buze_host_module_t*</type>
            <name>module</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_get_host_module</name>
        <returns>buze_host_module_t*</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_destroy</name>
        <description>Frees all application resources, including shutting down the armstrong audio and midi drivers.</description>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_initialize</name>
        <description>Initializes the application with the supplied Armstrong handles.</description>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
          <argument>
            <type>zzub_player_t*</type>
            <name>player</name>
          </argument>
          <argument>
            <type>zzub_audiodriver_t*</type>
            <name>driver</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_open_midi_devices_from_config</name>
        <description>Initializes a device on the Armstrong audio driver using settings from the Buze configuration.</description>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_create_audio_device_from_config</name>
        <description>Initializes a device on the Armstrong audio driver using settings from the Buze configuration.</description>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_create_audio_device</name>
        <description>Initializes a device on the Armstrong audio driver.</description>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>outdevicename</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>indevicename</name>
          </argument>
          <argument>
            <type>int</type>
            <name>rate</name>
          </argument>
          <argument>
            <type>int</type>
            <name>buffersize</name>
          </argument>
          <argument>
            <type>int</type>
            <name>masterchannel</name>
          </argument>
          <argument>
            <type>int</type>
            <name>save</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_enable_silent_driver</name>
        <description>Enables or disables silent processing.</description>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
          <argument>
            <type>int</type>
            <name>enable</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_get_audio_driver</name>
        <description>Returns an Armstrong handle to the active audio driver. If silent processing is enabled, the silent driver is returned.</description>
        <returns>zzub_audiodriver_t*</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_release_audio_driver</name>
        <description>Releases the audio device, driver and all resources.</description>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_get_configuration</name>
        <description>Returns the Buze configuration object.</description>
        <returns>buze_configuration_t*</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_map_path</name>
        <description>Returns a full path relative to the application directory.</description>
        <returns>const char*</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>path</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_show_wait_window</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_set_wait_text</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>text</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_hide_wait_window</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
          <argument>
            <type>void*</type>
            <name>focusWnd</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_get_theme_color</name>
        <returns>unsigned int</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>name</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_get_theme_name</name>
        <returns>const char*</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
          <argument>
            <type>int</type>
            <name>index</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_get_theme_count</name>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_application_load_theme</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_application_t*</type>
            <name>application</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>name</name>
          </argument>
        </arguments>
      </method>
    </class>
    <class>
      <name>buze_main_frame_t</name>
      <description>The main application window of a Buze instance.</description>
      <description>The main frame is implemented by the host by deriving from the CViewFrame interface.</description>
      <method>
        <name>buze_main_frame_initialize</name>
        <description>Initialize the main frame: enumerate views and create the frame window.</description>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_main_frame_t*</type>
            <name>main_frame</name>
          </argument>
          <argument>
            <type>void*</type>
            <name>parentwnd</name>
          </argument>
          <argument>
            <type>zzub_player_t*</type>
            <name>player</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_main_frame_destroy</name>
        <description>Destroys the mainframe and all its resources.</description>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_main_frame_t*</type>
            <name>main_frame</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_main_frame_get_wnd</name>
        <description>Returns the mainframes window handle.</description>
        <returns>void*</returns>
        <arguments>
          <argument>
            <type>buze_main_frame_t*</type>
            <name>main_frame</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_main_frame_add_timer_handler</name>
        <description>Adds the view to the mainframe's list of timers.</description>
        <description>The timer calls CView::UpdateTimer() approx every 10 ms.</description>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_main_frame_t*</type>
            <name>main_frame</name>
          </argument>
          <argument>
            <type>buze_window_t*</type>
            <name>wnd</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_main_frame_remove_timer_handler</name>
        <description>Removes the view from the list of timers.</description>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_main_frame_t*</type>
            <name>main_frame</name>
          </argument>
          <argument>
            <type>buze_window_t*</type>
            <name>wnd</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_main_frame_viewstack_insert</name>
        <description>Makes the view CTRL+TAB-able.</description>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_main_frame_t*</type>
            <name>main_frame</name>
          </argument>
          <argument>
            <type>buze_window_t*</type>
            <name>wnd</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_main_frame_get_accelerators</name>
        <description>Returns an accelerator handle for the specified view.</description>
        <returns>void*</returns>
        <arguments>
          <argument>
            <type>buze_main_frame_t*</type>
            <name>main_frame</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>viewname</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_main_frame_get_document</name>
        <description>Returns the document instance.</description>
        <returns>buze_document_t*</returns>
        <arguments>
          <argument>
            <type>buze_main_frame_t*</type>
            <name>main_frame</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_main_frame_get_application</name>
        <description>Returns the application instance.</description>
        <returns>buze_application_t*</returns>
        <arguments>
          <argument>
            <type>buze_main_frame_t*</type>
            <name>main_frame</name>
          </argument>
        </arguments>
      </method>
    </class>
    <class>
      <name>buze_window_t</name>
      <description>A view, floating or docked in the main frame</description>
    </class>
    <class>
      <name>buze_event_handler_t</name>
      <description>Interface for internal events via CEventHandler::Update</description>
    </class>
    <class>
      <name>buze_message_filter_t</name>
      <description>Interface for WTL events via CMessageFilter::PreTranslateMessage</description>
    </class>
    <class>
      <name>buze_idle_handler_t</name>
      <description>Interface for WTL events CIdleHandler::OnIdle</description>
    </class>
    <class>
      <name>buze_message_loop_t</name>
      <description>Interface for the host's WTL CMessageLoop</description>
    </class>
    <class>
      <name>buze_host_module_t</name>
      <description>Interface for the host's CAppModule, used to forward _Module features to the DLL plugins</description>
    </class>
    <class>
      <name>buze_document_t</name>
      <method>
        <name>buze_document_add_view</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>buze_event_handler_t*</type>
            <name>view</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_remove_view</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>buze_event_handler_t*</type>
            <name>view</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_notify_views</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>buze_window_t*</type>
            <name>sender</name>
          </argument>
          <argument>
            <type>int</type>
            <name>hint</name>
          </argument>
          <argument>
            <type>void*</type>
            <name>param</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_add_callback</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>buze_callback_t</type>
            <name>callback</name>
          </argument>
          <argument>
            <type>void*</type>
            <name>tag</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_remove_callback</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>buze_callback_t</type>
            <name>callback</name>
          </argument>
          <argument>
            <type>void*</type>
            <name>tag</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_octave</name>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_set_octave</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>int</type>
            <name>oct</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_plugin_non_song</name>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>plugin</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_set_plugin_non_song</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>plugin</name>
          </argument>
          <argument>
            <type>int</type>
            <name>state</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_plugin_parameter_view_mode</name>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>plugin</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_set_plugin_parameter_view_mode</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>plugin</name>
          </argument>
          <argument>
            <type>int</type>
            <name>mode</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_plugin_last_preset</name>
        <returns>const char*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>plugin</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_set_plugin_last_preset</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>plugin</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>preset</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_player</name>
        <returns>zzub_player_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_stream_plugin_uri_for_file</name>
        <returns>const char*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>path</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_play_plugin_note</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>plugin</name>
          </argument>
          <argument>
            <type>int</type>
            <name>note</name>
          </argument>
          <argument>
            <type>int</type>
            <name>prevnote</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_play_stream</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>int</type>
            <name>note</name>
          </argument>
          <argument>
            <type>int</type>
            <name>offset</name>
          </argument>
          <argument>
            <type>int</type>
            <name>length</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>pluginuri</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>dataurl</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_keyjazz_key_down</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>plugin</name>
          </argument>
          <argument>
            <type>int</type>
            <name>wParam</name>
          </argument>
          <argument>
            <type>int</type>
            <name>note</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_keyjazz_key_up</name>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>int</type>
            <name>wParam</name>
          </argument>
          <argument>
            <type>int</type>
            <name>note</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>plugin</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_keyjazz_release</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>int</type>
            <name>sendnoteoffs</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_stream_plugin</name>
        <returns>zzub_plugin_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_delete_stream_plugin</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_configuration</name>
        <description>Returns the Buze configuration object.</description>
        <returns>buze_configuration_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_solo_plugin</name>
        <returns>zzub_plugin_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_set_solo_plugin</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>plugin</name>
          </argument>
          <argument>
            <type>int</type>
            <name>state</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_plugin_helpfile</name>
        <returns>const char*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>zzub_pluginloader_t*</type>
            <name>loader</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_import_song</name>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>filename</name>
          </argument>
          <argument>
            <type>int</type>
            <name>flags</name>
          </argument>
          <argument>
            <type>float</type>
            <name>x</name>
          </argument>
          <argument>
            <type>float</type>
            <name>y</name>
          </argument>
          <argument>
            <type>char*</type>
            <name>errormessages</name>
          </argument>
          <argument>
            <type>int</type>
            <name>outsize</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_load_plugin_index</name>
        <description>Initializes the plugin index: Loads Gear/index.txt and enumerates songs in Gear/Templates.</description>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_plugin_index_item_by_index</name>
        <returns>buze_plugin_index_item_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>int</type>
            <name>index</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_plugin_index_root</name>
        <returns>buze_plugin_index_item_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_is_dirty</name>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_set_current_file</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>fullpath</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_current_filename</name>
        <returns>const char*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_current_path</name>
        <returns>const char*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_current_extension</name>
        <returns>const char*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_clear_song</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_save_file</name>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>filename</name>
          </argument>
          <argument>
            <type>int</type>
            <name>withwaves</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_create_plugin</name>
        <returns>zzub_plugin_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>uri</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>instrumentname</name>
          </argument>
          <argument>
            <type>float</type>
            <name>x</name>
          </argument>
          <argument>
            <type>float</type>
            <name>y</name>
          </argument>
          <argument>
            <type>zzub_plugin_group_t*</type>
            <name>plugingroup</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_create_plugin_between</name>
        <returns>zzub_plugin_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>to_plugin</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>from_plugin</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>uri</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>instrumentname</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_create_plugin_before</name>
        <returns>zzub_plugin_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>srcplugin</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>uri</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>instrumentname</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_create_plugin_after</name>
        <returns>zzub_plugin_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>srcplugin</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>uri</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>instrumentname</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_create_plugin_replace</name>
        <returns>zzub_plugin_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>srcplugin</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>uri</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>instrumentname</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_create_default_document</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_create_default_format</name>
        <returns>zzub_pattern_format_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>plugin</name>
          </argument>
          <argument>
            <type>int</type>
            <name>simple</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_delete_plugin_smart</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>zzub_plugin_t*</type>
            <name>plugin</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_current_plugin</name>
        <returns>zzub_plugin_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_current_pattern</name>
        <returns>zzub_pattern_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_current_pattern_format</name>
        <returns>zzub_pattern_format_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_current_connection</name>
        <returns>zzub_connection_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_current_wave</name>
        <returns>zzub_wave_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_get_current_wavelevel</name>
        <returns>zzub_wavelevel_t*</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_document_import_wave</name>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_document_t*</type>
            <name>document</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>filename</name>
          </argument>
          <argument>
            <type>zzub_wave_t*</type>
            <name>target</name>
          </argument>
        </arguments>
      </method>
    </class>
    <class>
      <name>buze_plugin_index_item_t</name>
      <method>
        <name>buze_plugin_index_item_get_type</name>
        <description>Index type, 0 = folder, 1 = plugin/template, 2 = separator</description>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_plugin_index_item_t*</type>
            <name>plugin_index_item</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_plugin_index_item_get_name</name>
        <returns>const char*</returns>
        <arguments>
          <argument>
            <type>buze_plugin_index_item_t*</type>
            <name>plugin_index_item</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_plugin_index_item_is_hidden</name>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_plugin_index_item_t*</type>
            <name>plugin_index_item</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_plugin_index_item_is_preloaded</name>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_plugin_index_item_t*</type>
            <name>plugin_index_item</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_plugin_index_item_get_filename</name>
        <returns>const char*</returns>
        <arguments>
          <argument>
            <type>buze_plugin_index_item_t*</type>
            <name>plugin_index_item</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_plugin_index_item_get_instrumentname</name>
        <returns>const char*</returns>
        <arguments>
          <argument>
            <type>buze_plugin_index_item_t*</type>
            <name>plugin_index_item</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_plugin_index_item_get_sub_item</name>
        <returns>buze_plugin_index_item_t*</returns>
        <arguments>
          <argument>
            <type>buze_plugin_index_item_t*</type>
            <name>plugin_index_item</name>
          </argument>
          <argument>
            <type>int</type>
            <name>index</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_plugin_index_item_get_sub_item_count</name>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_plugin_index_item_t*</type>
            <name>plugin_index_item</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_plugin_index_item_get_separator_id</name>
        <description>Returns an identifier to a .plur image to use in place of the separator</description>
        <returns>const char*</returns>
        <arguments>
          <argument>
            <type>buze_plugin_index_item_t*</type>
            <name>plugin_index_item</name>
          </argument>
        </arguments>
      </method>
    </class>
    <class>
      <name>buze_configuration_t</name>
      <method>
        <name>buze_configuration_add_sample_path</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_configuration_t*</type>
            <name>configuration</name>
          </argument>
          <argument>
            <type>const char*</type>
            <name>path</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_configuration_remove_sample_path</name>
        <returns>void</returns>
        <arguments>
          <argument>
            <type>buze_configuration_t*</type>
            <name>configuration</name>
          </argument>
          <argument>
            <type>int</type>
            <name>index</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_configuration_get_sample_path_count</name>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_configuration_t*</type>
            <name>configuration</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_configuration_get_sample_path</name>
        <returns>const char*</returns>
        <arguments>
          <argument>
            <type>buze_configuration_t*</type>
            <name>configuration</name>
          </argument>
          <argument>
            <type>int</type>
            <name>index</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_configuration_get_fixed_width_font</name>
        <returns>const char*</returns>
        <arguments>
          <argument>
            <type>buze_configuration_t*</type>
            <name>configuration</name>
          </argument>
        </arguments>
      </method>
      <method>
        <name>buze_configuration_get_toolbars_locked</name>
        <description>Returns true if the toolbars are locked.</description>
        <returns>int</returns>
        <arguments>
          <argument>
            <type>buze_configuration_t*</type>
            <name>configuration</name>
          </argument>
        </arguments>
      </method>
    </class>
  </namespace>
</zidl>
