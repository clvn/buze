/* autogenerated by zidl 2 */
#if !defined(__zzub_H)
#define __zzub_H

#if defined(__cplusplus)
extern "C" {
#endif

#include "zzub/types.h"

typedef struct zzub_event_data_double_click zzub_event_data_double_click_t;
typedef struct zzub_event_data_insert_plugin zzub_event_data_insert_plugin_t;
typedef struct zzub_event_data_delete_plugin zzub_event_data_delete_plugin_t;
typedef struct zzub_event_data_update_plugin zzub_event_data_update_plugin_t;
typedef struct zzub_event_data_insert_connection zzub_event_data_insert_connection_t;
typedef struct zzub_event_data_update_connection zzub_event_data_update_connection_t;
typedef struct zzub_event_data_delete_connection zzub_event_data_delete_connection_t;
typedef struct zzub_event_data_insert_pattern zzub_event_data_insert_pattern_t;
typedef struct zzub_event_data_update_pattern zzub_event_data_update_pattern_t;
typedef struct zzub_event_data_delete_pattern zzub_event_data_delete_pattern_t;
typedef struct zzub_event_data_insert_pattern_event zzub_event_data_insert_pattern_event_t;
typedef struct zzub_event_data_update_pattern_event zzub_event_data_update_pattern_event_t;
typedef struct zzub_event_data_delete_pattern_event zzub_event_data_delete_pattern_event_t;
typedef struct zzub_event_data_insert_pattern_format zzub_event_data_insert_pattern_format_t;
typedef struct zzub_event_data_update_pattern_format zzub_event_data_update_pattern_format_t;
typedef struct zzub_event_data_delete_pattern_format zzub_event_data_delete_pattern_format_t;
typedef struct zzub_event_data_insert_pattern_format_column zzub_event_data_insert_pattern_format_column_t;
typedef struct zzub_event_data_update_pattern_format_column zzub_event_data_update_pattern_format_column_t;
typedef struct zzub_event_data_delete_pattern_format_column zzub_event_data_delete_pattern_format_column_t;
typedef struct zzub_event_data_midi_message zzub_event_data_midi_message_t;
typedef struct zzub_event_data_update_plugin_parameter zzub_event_data_update_plugin_parameter_t;
typedef struct zzub_event_data_player_state_changed zzub_event_data_player_state_changed_t;
typedef struct zzub_event_data_player_order_changed zzub_event_data_player_order_changed_t;
typedef struct zzub_event_data_player_load zzub_event_data_player_load_t;
typedef struct zzub_event_data_player_save zzub_event_data_player_save_t;
typedef struct zzub_event_data_vu zzub_event_data_vu_t;
typedef struct zzub_event_data_serialize zzub_event_data_serialize_t;
typedef struct zzub_event_data_unknown zzub_event_data_unknown_t;
typedef struct zzub_event_data_osc_message zzub_event_data_osc_message_t;
typedef struct zzub_event_data_insert_wave zzub_event_data_insert_wave_t;
typedef struct zzub_event_data_update_wave zzub_event_data_update_wave_t;
typedef struct zzub_event_data_delete_wave zzub_event_data_delete_wave_t;
typedef struct zzub_event_data_insert_wavelevel zzub_event_data_insert_wavelevel_t;
typedef struct zzub_event_data_update_wavelevel zzub_event_data_update_wavelevel_t;
typedef struct zzub_event_data_update_wavelevel_samples zzub_event_data_update_wavelevel_samples_t;
typedef struct zzub_event_data_delete_wavelevel zzub_event_data_delete_wavelevel_t;
typedef struct zzub_event_data_insert_plugin_group zzub_event_data_insert_plugin_group_t;
typedef struct zzub_event_data_delete_plugin_group zzub_event_data_delete_plugin_group_t;
typedef struct zzub_event_data_update_plugin_group zzub_event_data_update_plugin_group_t;
typedef struct zzub_event_data_custom zzub_event_data_custom_t;
typedef struct zzub_event_data_user_alert zzub_event_data_user_alert_t;
typedef struct zzub_event_data zzub_event_data_t;

#if !defined(NO_ZZUB_DEVICE_INFO_TYPE)
typedef struct _zzub_device_info zzub_device_info_t;
#endif

#if !defined(NO_ZZUB_DEVICE_INFO_ITERATOR_TYPE)
typedef struct _zzub_device_info_iterator zzub_device_info_iterator_t;
#endif

#if !defined(NO_ZZUB_AUDIODRIVER_TYPE)
typedef struct _zzub_audiodriver zzub_audiodriver_t;
#endif

#if !defined(NO_ZZUB_MIDIDRIVER_TYPE)
typedef struct _zzub_mididriver zzub_mididriver_t;
#endif

#if !defined(NO_ZZUB_PLUGINCOLLECTION_TYPE)
typedef struct _zzub_plugincollection zzub_plugincollection_t;
#endif

#if !defined(NO_ZZUB_INPUT_TYPE)
typedef struct _zzub_input zzub_input_t;
#endif

#if !defined(NO_ZZUB_OUTPUT_TYPE)
typedef struct _zzub_output zzub_output_t;
#endif

#if !defined(NO_ZZUB_ARCHIVE_TYPE)
typedef struct _zzub_archive zzub_archive_t;
#endif

#if !defined(NO_ZZUB_MIDIMAPPING_TYPE)
typedef struct _zzub_midimapping zzub_midimapping_t;
#endif

#if !defined(NO_ZZUB_PATTERN_EVENT_TYPE)
typedef struct _zzub_pattern_event zzub_pattern_event_t;
#endif

#if !defined(NO_ZZUB_PATTERN_ITERATOR_TYPE)
typedef struct _zzub_pattern_iterator zzub_pattern_iterator_t;
#endif

#if !defined(NO_ZZUB_PATTERN_EVENT_ITERATOR_TYPE)
typedef struct _zzub_pattern_event_iterator zzub_pattern_event_iterator_t;
#endif

#if !defined(NO_ZZUB_PATTERN_TYPE)
typedef struct _zzub_pattern zzub_pattern_t;
#endif

#if !defined(NO_ZZUB_PATTERN_FORMAT_TYPE)
typedef struct _zzub_pattern_format zzub_pattern_format_t;
#endif

#if !defined(NO_ZZUB_PATTERN_FORMAT_ITERATOR_TYPE)
typedef struct _zzub_pattern_format_iterator zzub_pattern_format_iterator_t;
#endif

#if !defined(NO_ZZUB_PATTERN_FORMAT_COLUMN_TYPE)
typedef struct _zzub_pattern_format_column zzub_pattern_format_column_t;
#endif

#if !defined(NO_ZZUB_PATTERN_FORMAT_COLUMN_ITERATOR_TYPE)
typedef struct _zzub_pattern_format_column_iterator zzub_pattern_format_column_iterator_t;
#endif

#if !defined(NO_ZZUB_PARAMETER_TYPE)
typedef struct _zzub_parameter zzub_parameter_t;
#endif

#if !defined(NO_ZZUB_ATTRIBUTE_TYPE)
typedef struct _zzub_attribute zzub_attribute_t;
#endif

#if !defined(NO_ZZUB_PLUGINLOADER_TYPE)
typedef struct _zzub_pluginloader zzub_pluginloader_t;
#endif

#if !defined(NO_ZZUB_PLUGIN_TYPE)
typedef struct _zzub_plugin zzub_plugin_t;
#endif

#if !defined(NO_ZZUB_PLUGIN_ITERATOR_TYPE)
typedef struct _zzub_plugin_iterator zzub_plugin_iterator_t;
#endif

#if !defined(NO_ZZUB_CONNECTION_TYPE)
typedef struct _zzub_connection zzub_connection_t;
#endif

#if !defined(NO_ZZUB_CONNECTION_BINDING_TYPE)
typedef struct _zzub_connection_binding zzub_connection_binding_t;
#endif

#if !defined(NO_ZZUB_CONNECTION_BINDING_ITERATOR_TYPE)
typedef struct _zzub_connection_binding_iterator zzub_connection_binding_iterator_t;
#endif

#if !defined(NO_ZZUB_WAVE_TYPE)
typedef struct _zzub_wave zzub_wave_t;
#endif

#if !defined(NO_ZZUB_WAVELEVEL_TYPE)
typedef struct _zzub_wavelevel zzub_wavelevel_t;
#endif

#if !defined(NO_ZZUB_ENVELOPE_TYPE)
typedef struct _zzub_envelope zzub_envelope_t;
#endif

#if !defined(NO_ZZUB_MIXER_TYPE)
typedef struct _zzub_mixer zzub_mixer_t;
#endif

#if !defined(NO_ZZUB_VALIDATION_ERROR_ITERATOR_TYPE)
typedef struct _zzub_validation_error_iterator zzub_validation_error_iterator_t;
#endif

#if !defined(NO_ZZUB_VALIDATION_ERROR_TYPE)
typedef struct _zzub_validation_error zzub_validation_error_t;
#endif

#if !defined(NO_ZZUB_PLAYER_TYPE)
typedef struct _zzub_player zzub_player_t;
#endif

#if !defined(NO_ZZUB_PLUGIN_GROUP_TYPE)
typedef struct _zzub_plugin_group zzub_plugin_group_t;
#endif

#if !defined(NO_ZZUB_PLUGIN_GROUP_ITERATOR_TYPE)
typedef struct _zzub_plugin_group_iterator zzub_plugin_group_iterator_t;
#endif

#if !defined(NO_ZZUB_WAVE_IMPORTER_TYPE)
typedef struct _zzub_wave_importer zzub_wave_importer_t;
#endif

enum zzub_event_type {
  zzub_event_type_double_click = 0x0,
  zzub_event_type_update_song = 0x3c,
  zzub_event_type_insert_plugin = 0x1,
  zzub_event_type_before_delete_plugin = 0x5,
  zzub_event_type_delete_plugin = 0x2,
  zzub_event_type_update_plugin = 0x1e,
  zzub_event_type_insert_connection = 0x4,
  zzub_event_type_delete_connection = 0x3,
  zzub_event_type_update_connection = 0x44,
  zzub_event_type_update_pluginparameter = 0x7,
  zzub_event_type_insert_pattern = 0x19,
  zzub_event_type_update_pattern = 0x1f,
  zzub_event_type_delete_pattern = 0x1a,
  zzub_event_type_insert_patternevent = 0x1b,
  zzub_event_type_update_patternevent = 0x30,
  zzub_event_type_delete_patternevent = 0x31,
  zzub_event_type_insert_orderlist = 0x20,
  zzub_event_type_delete_orderlist = 0x21,
  zzub_event_type_update_orderlist = 0x29,
  zzub_event_type_insert_patternformat = 0x34,
  zzub_event_type_update_patternformat = 0x3d,
  zzub_event_type_delete_patternformat = 0x35,
  zzub_event_type_insert_patternformatcolumn = 0x36,
  zzub_event_type_update_patternformatcolumn = 0x3e,
  zzub_event_type_delete_patternformatcolumn = 0x37,
  zzub_event_type_insert_patternformattrack = 0x3f,
  zzub_event_type_update_patternformattrack = 0x40,
  zzub_event_type_delete_patternformattrack = 0x41,
  zzub_event_type_insert_plugin_group = 0x47,
  zzub_event_type_update_plugin_group = 0x48,
  zzub_event_type_delete_plugin_group = 0x49,
  zzub_event_type_envelope_changed = 0x25,
  zzub_event_type_slices_changed = 0x26,
  zzub_event_type_insert_wave = 0x38,
  zzub_event_type_update_wave = 0x27,
  zzub_event_type_delete_wave = 0x28,
  zzub_event_type_insert_wavelevel = 0xc,
  zzub_event_type_update_wavelevel = 0x39,
  zzub_event_type_delete_wavelevel = 0x3a,
  zzub_event_type_update_wavelevel_samples = 0x3b,
  zzub_event_type_user_alert = 0x8,
  zzub_event_type_midi_control = 0xb,
  zzub_event_type_player_state_changed = 0x14,
  zzub_event_type_osc_message = 0x15,
  zzub_event_type_vu = 0x16,
  zzub_event_type_player_order_changed = 0x45,
  zzub_event_type_player_order_queue_changed = 0x46,
  zzub_event_type_custom = 0x2c,
  zzub_event_type_samplerate_changed = 0x32,
  zzub_event_type_latency_changed = 0x4c,
  zzub_event_type_device_reset = 0x4d,
  zzub_event_type_barrier = 0x33,
  zzub_event_type_player_save = 0x4a,
  zzub_event_type_player_load = 0x4b,
  zzub_event_type_all = 0xff,
};

enum zzub_alert_type {
  zzub_alert_type_enumerating_plugins = 0x1,
  zzub_alert_type_enumerating_plugins_done = 0x2,
  zzub_alert_type_mixdown_progress = 0x14,
  zzub_alert_type_loading_plugins = 0x64,
  zzub_alert_type_loading_patterns = 0x65,
  zzub_alert_type_loading_waves = 0x66,
  zzub_alert_type_pattern_recursion = 0x190,
};

enum zzub_validation_error_type {
  zzub_validation_error_type_parameter_count_mismatch = 0x1,
  zzub_validation_error_type_parameter_type_mismatch = 0x2,
  zzub_validation_error_type_parameter_flags_mismatch = 0x3,
  zzub_validation_error_type_parameter_value_min_mismatch = 0x4,
  zzub_validation_error_type_parameter_value_max_mismatch = 0x5,
  zzub_validation_error_type_parameter_value_none_mismatch = 0x6,
  zzub_validation_error_type_parameter_value_default_mismatch = 0x7,
  zzub_validation_error_type_plugin_not_found_using_dummy = 0x8,
  zzub_validation_error_type_plugin_validation_failed_using_dummy = 0x9,
  zzub_validation_error_type_plugin_not_found = 0xa,
  zzub_validation_error_type_plugin_inputs_mismatch = 0xb,
  zzub_validation_error_type_plugin_outputs_mismatch = 0xc,
};

enum zzub_wave_importer_type {
  zzub_wave_importer_type_wave_file = 0x0,
  zzub_wave_importer_type_wave_archive = 0x1,
  zzub_wave_importer_type_instrument_file = 0x2,
  zzub_wave_importer_type_instrument_archive = 0x3,
};

enum {
  zzub_version = 0xf,
  zzub_buffer_size = 0x100,
};

enum zzub_player_state {
  zzub_player_state_playing = 0x0,
  zzub_player_state_stopped = 0x1,
  zzub_player_state_muted = 0x2,
  zzub_player_state_released = 0x3,
};

enum zzub_parameter_type {
  zzub_parameter_type_note = 0x0,
  zzub_parameter_type_switch = 0x1,
  zzub_parameter_type_byte = 0x2,
  zzub_parameter_type_word = 0x3,
  zzub_parameter_type_meta = 0x4,
};

enum zzub_wave_buffer_type {
  zzub_wave_buffer_type_si16 = 0x0,
  zzub_wave_buffer_type_f32 = 0x1,
  zzub_wave_buffer_type_si32 = 0x2,
  zzub_wave_buffer_type_si24 = 0x3,
};

enum zzub_oscillator_type {
  zzub_oscillator_type_sine = 0x0,
  zzub_oscillator_type_sawtooth = 0x1,
  zzub_oscillator_type_pulse = 0x2,
  zzub_oscillator_type_triangle = 0x3,
  zzub_oscillator_type_noise = 0x4,
  zzub_oscillator_type_sawtooth_303 = 0x5,
};

enum zzub_note_value {
  zzub_note_value_none = 0x0,
  zzub_note_value_off = 0xff,
  zzub_note_value_cut = 0xfe,
  zzub_note_value_min = 0x1,
  zzub_note_value_max = 0x9c,
  zzub_note_value_c4 = 0x41,
};

enum zzub_switch_value {
  zzub_switch_value_none = 0xff,
  zzub_switch_value_off = 0x0,
  zzub_switch_value_on = 0x1,
};

enum zzub_wavetable_index_value {
  zzub_wavetable_index_value_none = 0x0,
  zzub_wavetable_index_value_min = 0x1,
  zzub_wavetable_index_value_max = 0xc8,
};

enum zzub_parameter_flag {
  zzub_parameter_flag_wavetable_index = 0x1,
  zzub_parameter_flag_state = 0x2,
  zzub_parameter_flag_event_on_edit = 0x4,
  zzub_parameter_flag_pattern_index = 0x8,
  zzub_parameter_flag_velocity_index = 0x10,
  zzub_parameter_flag_delay_index = 0x20,
  zzub_parameter_flag_compound = 0x40,
  zzub_parameter_flag_char_index = 0x80,
  zzub_parameter_flag_harmony_index = 0x100,
  zzub_parameter_flag_meta_note = 0x200,
  zzub_parameter_flag_meta_wave = 0x400,
};

enum zzub_plugin_flag {
  zzub_plugin_flag_plays_waves = 0x2,
  zzub_plugin_flag_uses_lib_interface = 0x4,
  zzub_plugin_flag_does_input_mixing = 0x10,
  zzub_plugin_flag_is_singleton = 0x8000,
  zzub_plugin_flag_is_root = 0x10000,
  zzub_plugin_flag_has_audio_input = 0x20000,
  zzub_plugin_flag_has_audio_output = 0x40000,
  zzub_plugin_flag_is_offline = 0x80000,
  zzub_plugin_flag_has_event_output = 0x100000,
  zzub_plugin_flag_stream = 0x400000,
  zzub_plugin_flag_has_midi_input = 0x800000,
  zzub_plugin_flag_has_midi_output = 0x1000000,
  zzub_plugin_flag_has_group_input = 0x2000000,
  zzub_plugin_flag_has_group_output = 0x4000000,
  zzub_plugin_flag_is_sequence = 0x8000000,
  zzub_plugin_flag_is_connection = 0x10000000,
  zzub_plugin_flag_is_interval = 0x20000000,
  zzub_plugin_flag_is_encoder = 0x40000000,
  zzub_plugin_flag_has_note_output = 0x80000000,
};

enum zzub_wave_flag {
  zzub_wave_flag_loop = 0x1,
  zzub_wave_flag_extended = 0x4,
  zzub_wave_flag_stereo = 0x8,
  zzub_wave_flag_pingpong = 0x10,
  zzub_wave_flag_envelope = 0x80,
};

enum zzub_envelope_flag {
  zzub_envelope_flag_sustain = 0x1,
  zzub_envelope_flag_loop = 0x2,
};

enum zzub_process_mode {
  zzub_process_mode_no_io = 0x0,
  zzub_process_mode_read = 0x1,
  zzub_process_mode_write = 0x2,
  zzub_process_mode_read_write = 0x3,
};

enum zzub_encoder_state {
  zzub_encoder_state_playing = 0x1,
  zzub_encoder_state_stopped = 0x2,
  zzub_encoder_state_deleted = 0x4,
  zzub_encoder_state_seeking = 0x8,
  zzub_encoder_state_created = 0x10,
};

enum zzub_connection_type {
  zzub_connection_type_audio = 0x0,
  zzub_connection_type_event = 0x1,
  zzub_connection_type_midi = 0x2,
  zzub_connection_type_note = 0x3,
};

enum zzub_parameter_group {
  zzub_parameter_group_internal = 0x0,
  zzub_parameter_group_global = 0x1,
  zzub_parameter_group_track = 0x2,
  zzub_parameter_group_controller = 0x3,
  zzub_parameter_group_virtual = 0x4,
};

/* class DoubleClick */

struct zzub_event_data_double_click {
  zzub_plugin_t* plugin;
};

/* class InsertPlugin */

struct zzub_event_data_insert_plugin {
  zzub_plugin_t* plugin;
};

/* class DeletePlugin */

struct zzub_event_data_delete_plugin {
  zzub_plugin_t* plugin;
};

/* class UpdatePlugin */

struct zzub_event_data_update_plugin {
  zzub_plugin_t* plugin;
};

/* class InsertConnection */

struct zzub_event_data_insert_connection {
  zzub_plugin_t* from_plugin;
  zzub_plugin_t* to_plugin;
  zzub_plugin_t* connection_plugin;
  int type;
};

/* class UpdateConnection */

struct zzub_event_data_update_connection {
  zzub_plugin_t* connection_plugin;
  zzub_plugin_t* from_plugin;
  zzub_plugin_t* to_plugin;
  int type;
};

/* class DeleteConnection */

struct zzub_event_data_delete_connection {
  zzub_plugin_t* connection_plugin;
  zzub_plugin_t* from_plugin;
  zzub_plugin_t* to_plugin;
  int type;
};

/* class InsertPattern */

struct zzub_event_data_insert_pattern {
  zzub_pattern_t* pattern;
};

/* class UpdatePattern */

struct zzub_event_data_update_pattern {
  zzub_pattern_t* pattern;
};

/* class DeletePattern */

struct zzub_event_data_delete_pattern {
  zzub_pattern_t* pattern;
};

/* class InsertPatternEvent */

struct zzub_event_data_insert_pattern_event {
  zzub_pattern_event_t* patternevent;
};

/* class UpdatePatternEvent */

struct zzub_event_data_update_pattern_event {
  zzub_pattern_event_t* patternevent;
};

/* class DeletePatternEvent */

struct zzub_event_data_delete_pattern_event {
  zzub_pattern_event_t* patternevent;
};

/* class InsertPatternFormat */

struct zzub_event_data_insert_pattern_format {
  zzub_pattern_format_t* patternformat;
};

/* class UpdatePatternFormat */

struct zzub_event_data_update_pattern_format {
  zzub_pattern_format_t* patternformat;
};

/* class DeletePatternFormat */

struct zzub_event_data_delete_pattern_format {
  zzub_pattern_format_t* patternformat;
};

/* class InsertPatternFormatColumn */

struct zzub_event_data_insert_pattern_format_column {
  zzub_pattern_format_column_t* patternformatcolumn;
};

/* class UpdatePatternFormatColumn */

struct zzub_event_data_update_pattern_format_column {
  zzub_pattern_format_column_t* patternformatcolumn;
};

/* class DeletePatternFormatColumn */

struct zzub_event_data_delete_pattern_format_column {
  zzub_pattern_format_column_t* patternformatcolumn;
};

/* class MidiMessage */

struct zzub_event_data_midi_message {
  unsigned char status;
  unsigned char data1;
  unsigned char data2;
};

/* class UpdatePluginParameter */

struct zzub_event_data_update_plugin_parameter {
  zzub_plugin_t* plugin;
  int group;
  int track;
  int param;
  int value;
};

/* class PlayerStateChanged */

struct zzub_event_data_player_state_changed {
  int player_state;
};

/* class PlayerOrderChanged */

struct zzub_event_data_player_order_changed {
  int orderindex;
};

/* class PlayerLoad */

struct zzub_event_data_player_load {
  zzub_archive_t* userdata;
};

/* class PlayerSave */

struct zzub_event_data_player_save {
  zzub_archive_t* userdata;
};

/* class Vu */

struct zzub_event_data_vu {
  int size;
  float left_amp;
  float right_amp;
  float time;
};

/* class Serialize */

struct zzub_event_data_serialize {
  char mode;
  zzub_archive_t* archive;
};

/* class Unknown */

struct zzub_event_data_unknown {
  void* param;
};

/* class OscMessage */

struct zzub_event_data_osc_message {
  const char* path;
  const char* types;
  const void** argv;
  int argc;
  void* msg;
};

/* class InsertWave */

struct zzub_event_data_insert_wave {
  zzub_wave_t* wave;
};

/* class UpdateWave */

struct zzub_event_data_update_wave {
  zzub_wave_t* wave;
};

/* class DeleteWave */

struct zzub_event_data_delete_wave {
  zzub_wave_t* wave;
};

/* class InsertWavelevel */

struct zzub_event_data_insert_wavelevel {
  zzub_wavelevel_t* wavelevel;
};

/* class UpdateWavelevel */

struct zzub_event_data_update_wavelevel {
  zzub_wavelevel_t* wavelevel;
};

/* class UpdateWavelevelSamples */

struct zzub_event_data_update_wavelevel_samples {
  zzub_wavelevel_t* wavelevel;
};

/* class DeleteWavelevel */

struct zzub_event_data_delete_wavelevel {
  zzub_wavelevel_t* wavelevel;
};

/* class InsertPluginGroup */

struct zzub_event_data_insert_plugin_group {
  zzub_plugin_group_t* group;
};

/* class DeletePluginGroup */

struct zzub_event_data_delete_plugin_group {
  zzub_plugin_group_t* group;
};

/* class UpdatePluginGroup */

struct zzub_event_data_update_plugin_group {
  zzub_plugin_group_t* group;
};

/* class Custom */

struct zzub_event_data_custom {
  int id;
  void* data;
};

/* class UserAlert */

struct zzub_event_data_user_alert {
  int type;
  union {
    zzub_plugincollection_t* collection;
    zzub_pluginloader_t* plugin;
    zzub_wave_t* wave;
    int progress;
  };
};

/* class EventData */

struct zzub_event_data {
  int type;
  void* userdata;
  union {
    zzub_event_data_double_click_t double_click;
    zzub_event_data_midi_message_t midi_message;
    zzub_event_data_player_state_changed_t player_state_changed;
    zzub_event_data_player_order_changed_t player_order_changed;
    zzub_event_data_player_load_t player_load;
    zzub_event_data_player_save_t player_save;
    zzub_event_data_osc_message_t osc_message;
    zzub_event_data_vu_t vu;
    zzub_event_data_serialize_t serialize;
    zzub_event_data_insert_plugin_t insert_plugin;
    zzub_event_data_update_plugin_t update_plugin;
    zzub_event_data_delete_plugin_t delete_plugin;
    zzub_event_data_update_plugin_parameter_t update_pluginparameter;
    zzub_event_data_insert_connection_t insert_connection;
    zzub_event_data_update_connection_t update_connection;
    zzub_event_data_delete_connection_t delete_connection;
    zzub_event_data_insert_pattern_t insert_pattern;
    zzub_event_data_update_pattern_t update_pattern;
    zzub_event_data_delete_pattern_t delete_pattern;
    zzub_event_data_insert_pattern_event_t insert_patternevent;
    zzub_event_data_update_pattern_event_t update_patternevent;
    zzub_event_data_delete_pattern_event_t delete_patternevent;
    zzub_event_data_insert_pattern_format_t insert_pattern_format;
    zzub_event_data_update_pattern_format_t update_pattern_format;
    zzub_event_data_delete_pattern_format_t delete_pattern_format;
    zzub_event_data_insert_pattern_format_column_t insert_pattern_format_column;
    zzub_event_data_update_pattern_format_column_t update_pattern_format_column;
    zzub_event_data_delete_pattern_format_column_t delete_pattern_format_column;
    zzub_event_data_insert_wave_t insert_wave;
    zzub_event_data_update_wave_t update_wave;
    zzub_event_data_delete_wave_t delete_wave;
    zzub_event_data_insert_wavelevel_t insert_wavelevel;
    zzub_event_data_update_wavelevel_t update_wavelevel;
    zzub_event_data_delete_wavelevel_t delete_wavelevel;
    zzub_event_data_update_wavelevel_samples_t update_wavelevel_samples;
    zzub_event_data_insert_plugin_group_t insert_plugin_group;
    zzub_event_data_update_plugin_group_t update_plugin_group;
    zzub_event_data_delete_plugin_group_t delete_plugin_group;
    zzub_event_data_user_alert_t alert;
    zzub_event_data_custom_t custom;
    zzub_event_data_unknown_t unknown;
  };
};
 typedef int (*zzub_callback_t)(zzub_player_t* player, zzub_plugin_t* plugin, zzub_event_data_t* data, void* tag);

/* class DeviceInfo */

int zzub_device_info_get_api(zzub_device_info_t* device_info);
const char* zzub_device_info_get_name(zzub_device_info_t* device_info);
int zzub_device_info_get_supported_buffersizes(zzub_device_info_t* device_info, int* result, int maxsizes);
int zzub_device_info_get_supported_samplerates(zzub_device_info_t* device_info, int* result, int maxrates);
int zzub_device_info_get_supported_output_channels(zzub_device_info_t* device_info);
int zzub_device_info_get_supported_input_channels(zzub_device_info_t* device_info);

/* class DeviceInfoIterator */

void zzub_device_info_iterator_next(zzub_device_info_iterator_t* device_info_iterator);
int zzub_device_info_iterator_valid(zzub_device_info_iterator_t* device_info_iterator);
zzub_device_info_t* zzub_device_info_iterator_current(zzub_device_info_iterator_t* device_info_iterator);
void zzub_device_info_iterator_reset(zzub_device_info_iterator_t* device_info_iterator);
void zzub_device_info_iterator_destroy(zzub_device_info_iterator_t* device_info_iterator);

/* class Audiodriver */

zzub_audiodriver_t* zzub_audiodriver_create_silent(zzub_player_t* player, const char* name, int out_channels, int in_channels, int* supported_rates, int num_rates);
zzub_audiodriver_t* zzub_audiodriver_create(zzub_player_t* player);
int zzub_audiodriver_get_count(zzub_audiodriver_t* audiodriver);
zzub_device_info_t* zzub_audiodriver_get_device_info(zzub_audiodriver_t* audiodriver, int index);
zzub_device_info_t* zzub_audiodriver_get_device_info_by_name(zzub_audiodriver_t* audiodriver, const char* name);
zzub_device_info_iterator_t* zzub_audiodriver_get_output_iterator(zzub_audiodriver_t* audiodriver);
zzub_device_info_iterator_t* zzub_audiodriver_get_input_iterator(zzub_audiodriver_t* audiodriver);
zzub_device_info_iterator_t* zzub_audiodriver_get_input_iterator_for_output(zzub_audiodriver_t* audiodriver, zzub_device_info_t* info);
int zzub_audiodriver_create_device(zzub_audiodriver_t* audiodriver, const char* input_name, const char* output_name, int buffersize, int samplerate);
zzub_device_info_t* zzub_audiodriver_get_current_device(zzub_audiodriver_t* audiodriver, int for_input);
void zzub_audiodriver_enable(zzub_audiodriver_t* audiodriver, int state);
int zzub_audiodriver_get_enabled(zzub_audiodriver_t* audiodriver);
void zzub_audiodriver_destroy(zzub_audiodriver_t* audiodriver);
void zzub_audiodriver_destroy_device(zzub_audiodriver_t* audiodriver);
unsigned int zzub_audiodriver_get_samplerate(zzub_audiodriver_t* audiodriver);
unsigned int zzub_audiodriver_get_buffersize(zzub_audiodriver_t* audiodriver);
double zzub_audiodriver_get_cpu_load(zzub_audiodriver_t* audiodriver);
int zzub_audiodriver_get_master_channel(zzub_audiodriver_t* audiodriver);
void zzub_audiodriver_set_master_channel(zzub_audiodriver_t* audiodriver, int index);
void zzub_audiodriver_configure(zzub_audiodriver_t* audiodriver);

/* class Mididriver */

int zzub_mididriver_get_count(zzub_player_t* player);
const char* zzub_mididriver_get_name(zzub_player_t* player, int index);
int zzub_mididriver_is_input(zzub_player_t* player, int index);
int zzub_mididriver_is_output(zzub_player_t* player, int index);
int zzub_mididriver_open(zzub_player_t* player, int index);
int zzub_mididriver_close_all(zzub_player_t* player);

/* class Plugincollection */

zzub_plugincollection_t* zzub_plugincollection_get_by_uri(zzub_player_t* player, const char* uri);
const char* zzub_plugincollection_get_name(zzub_plugincollection_t* plugincollection);
void zzub_plugincollection_configure(zzub_plugincollection_t* plugincollection, const char* key, const char* value);

/* class Input */

zzub_input_t* zzub_input_open_file(const char* filename);
void zzub_input_destroy(zzub_input_t* input);
int zzub_input_read(zzub_input_t* input, char* buffer, int bytes);
int zzub_input_size(zzub_input_t* input);
int zzub_input_position(zzub_input_t* input);
void zzub_input_seek(zzub_input_t* input, int pos, int mode);

/* class Output */

zzub_output_t* zzub_output_create_file(const char* filename);
void zzub_output_destroy(zzub_output_t* output);
void zzub_output_write(zzub_output_t* output, const char* buffer, int bytes);
int zzub_output_position(zzub_output_t* output);
void zzub_output_seek(zzub_output_t* output, int pos, int mode);

/* class Archive */

zzub_archive_t* zzub_archive_create_memory();
zzub_output_t* zzub_archive_get_output(zzub_archive_t* archive, const char* path);
zzub_input_t* zzub_archive_get_input(zzub_archive_t* archive, const char* path);
void zzub_archive_destroy(zzub_archive_t* archive);

/* class Midimapping */

int zzub_midimapping_get_plugin(zzub_midimapping_t* midimapping);
int zzub_midimapping_get_group(zzub_midimapping_t* midimapping);
int zzub_midimapping_get_track(zzub_midimapping_t* midimapping);
int zzub_midimapping_get_column(zzub_midimapping_t* midimapping);
int zzub_midimapping_get_channel(zzub_midimapping_t* midimapping);
int zzub_midimapping_get_controller(zzub_midimapping_t* midimapping);

/* class PatternEvent */

int zzub_pattern_event_get_id(zzub_pattern_event_t* pattern_event);
int zzub_pattern_event_get_pluginid(zzub_pattern_event_t* pattern_event);
zzub_pattern_t* zzub_pattern_event_get_pattern(zzub_pattern_event_t* pattern_event);
int zzub_pattern_event_get_group(zzub_pattern_event_t* pattern_event);
int zzub_pattern_event_get_track(zzub_pattern_event_t* pattern_event);
int zzub_pattern_event_get_column(zzub_pattern_event_t* pattern_event);
int zzub_pattern_event_get_time(zzub_pattern_event_t* pattern_event);
int zzub_pattern_event_get_value(zzub_pattern_event_t* pattern_event);
int zzub_pattern_event_get_meta(zzub_pattern_event_t* pattern_event);
int zzub_pattern_event_set_value(zzub_pattern_event_t* pattern_event, int value);
int zzub_pattern_event_set_meta(zzub_pattern_event_t* pattern_event, int meta);
int zzub_pattern_event_set_time(zzub_pattern_event_t* pattern_event, int value);

/* class PatternIterator */

void zzub_pattern_iterator_next(zzub_pattern_iterator_t* pattern_iterator);
int zzub_pattern_iterator_valid(zzub_pattern_iterator_t* pattern_iterator);
zzub_pattern_t* zzub_pattern_iterator_current(zzub_pattern_iterator_t* pattern_iterator);
void zzub_pattern_iterator_destroy(zzub_pattern_iterator_t* pattern_iterator);

/* class PatternEventIterator */

void zzub_pattern_event_iterator_next(zzub_pattern_event_iterator_t* pattern_event_iterator);
int zzub_pattern_event_iterator_valid(zzub_pattern_event_iterator_t* pattern_event_iterator);
zzub_pattern_event_t* zzub_pattern_event_iterator_current(zzub_pattern_event_iterator_t* pattern_event_iterator);
void zzub_pattern_event_iterator_destroy(zzub_pattern_event_iterator_t* pattern_event_iterator);

/* class Pattern */

void zzub_pattern_destroy(zzub_pattern_t* pattern);
const char* zzub_pattern_get_name(zzub_pattern_t* pattern);
void zzub_pattern_set_name(zzub_pattern_t* pattern, const char* name);
int zzub_pattern_get_row_count(zzub_pattern_t* pattern);
void zzub_pattern_set_row_count(zzub_pattern_t* pattern, int length);
int zzub_pattern_get_id(zzub_pattern_t* pattern);
zzub_pattern_format_t* zzub_pattern_get_format(zzub_pattern_t* pattern);
void zzub_pattern_set_format(zzub_pattern_t* pattern, zzub_pattern_format_t* format);
int zzub_pattern_get_resolution(zzub_pattern_t* pattern);
void zzub_pattern_set_resolution(zzub_pattern_t* pattern, int resolution);
int zzub_pattern_get_display_resolution(zzub_pattern_t* pattern);
void zzub_pattern_set_display_resolution(zzub_pattern_t* pattern, int resolution);
void zzub_pattern_get_display_beat_rows(zzub_pattern_t* pattern, int* verydarkrow, int* darkrow);
void zzub_pattern_set_display_beat_rows(zzub_pattern_t* pattern, int verydarkrow, int darkrow);
int zzub_pattern_get_loop_start(zzub_pattern_t* pattern);
void zzub_pattern_set_loop_start(zzub_pattern_t* pattern, int pos);
int zzub_pattern_get_loop_end(zzub_pattern_t* pattern);
void zzub_pattern_set_loop_end(zzub_pattern_t* pattern, int pos);
int zzub_pattern_get_loop_enabled(zzub_pattern_t* pattern);
void zzub_pattern_set_loop_enabled(zzub_pattern_t* pattern, int enable);
int zzub_pattern_get_replay_row(zzub_pattern_t* pattern);
void zzub_pattern_set_replay_row(zzub_pattern_t* pattern, int row);
int zzub_pattern_get_currently_playing_row(zzub_pattern_t* pattern);
void zzub_pattern_set_value(zzub_pattern_t* pattern, int row, zzub_plugin_t* plugin, int group, int track, int column, int value, int meta);
int zzub_pattern_get_value(zzub_pattern_t* pattern, int row, int pluginid, int group, int track, int column, int* value, int* meta);
zzub_pattern_event_iterator_t* zzub_pattern_get_event_iterator(zzub_pattern_t* pattern, zzub_plugin_t* plugin, int group, int track, int column);
zzub_pattern_event_iterator_t* zzub_pattern_get_event_unsorted_iterator(zzub_pattern_t* pattern, zzub_plugin_t* plugin, int group, int track, int column);
void zzub_pattern_insert_value(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int time, int value, int meta);
void zzub_pattern_delete_value(zzub_pattern_t* pattern, int id);
void zzub_pattern_update_value(zzub_pattern_t* pattern, int id, int time, int value, int meta);
void zzub_pattern_update_value_full(zzub_pattern_t* pattern, int id, int pluginid, int group, int track, int column, int time, int value, int meta);
void zzub_pattern_compact_pattern(zzub_pattern_t* pattern, int factor);
void zzub_pattern_expand_pattern(zzub_pattern_t* pattern, int factor);
void zzub_pattern_timeshift_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int timeshift);
void zzub_pattern_delete_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length);
void zzub_pattern_move_scale_events(zzub_pattern_t* pattern, int src_idx, int src_time, int dst_idx, int dst_time, int width, int length, int mode, int makecopy);
void zzub_pattern_paste_stream_events(zzub_pattern_t* pattern, int fromidx, int fromtime, int mode, const char* charbuf);
void zzub_pattern_transpose_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int delta, int* holes, int holecount, int* metas, int metacount, int chromatic);
void zzub_pattern_randomize_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int skip);
void zzub_pattern_randomize_range_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int from_val, int to_val, int skip);
void zzub_pattern_randomize_from_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int skip);
void zzub_pattern_humanize_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int deviation);
void zzub_pattern_shuffle_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length);
void zzub_pattern_interpolate_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int skip);
void zzub_pattern_gradiate_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int skip);
void zzub_pattern_smooth_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int strength);
void zzub_pattern_reverse_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length);
void zzub_pattern_compact_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int factor);
void zzub_pattern_expand_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int factor);
void zzub_pattern_thin_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int major);
void zzub_pattern_repeat_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int major);
void zzub_pattern_echo_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int major);
void zzub_pattern_unique_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length);
void zzub_pattern_scale_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, double min1, double max1, double min2, double max2);
void zzub_pattern_fade_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, double fromvalue, double tovalue);
void zzub_pattern_curvemap_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int mode);
void zzub_pattern_invert_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length);
void zzub_pattern_rotate_rows_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int offset);
void zzub_pattern_rotate_vals_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int offset);
void zzub_pattern_rotate_dist_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int offset);
void zzub_pattern_set_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int value, int meta);
void zzub_pattern_replace_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int from_value, int from_meta, int to_value, int to_meta);
void zzub_pattern_remove_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int value, int meta);
void zzub_pattern_notelength_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int fromtime, int length, int desired_len, int mode, int off_value);
void zzub_pattern_volumes_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int note_column, int vol_column, int fromtime, int length, int mode);
void zzub_pattern_swap_track_events(zzub_pattern_t* pattern, int left_idx, int right_idx, int fromtime, int length);
void zzub_pattern_swap_rows_events(zzub_pattern_t* pattern, int pluginid, int group, int track, int column, int top_row, int bottom_row);
void zzub_pattern_invert_chord_events(zzub_pattern_t* pattern, int left_idx, int right_idx, int fromtime, int length, int direction, int mode);
void zzub_pattern_move_and_transpose_notes(zzub_pattern_t* pattern, const zzub_pattern_event_t** events, int numevents, int timeshift, int pitchshift, int mode);
void zzub_pattern_insert_note(zzub_pattern_t* pattern, zzub_plugin_t* plugin, int time, int note, int length);
void zzub_pattern_update_note(zzub_pattern_t* pattern, zzub_pattern_event_t* patternevent, int time, int note, int length);

/* class PatternFormat */

zzub_pattern_format_column_t* zzub_pattern_format_add_column(zzub_pattern_format_t* pattern_format, zzub_plugin_t* plugin, int group, int track, int column, int idx);
void zzub_pattern_format_delete_column(zzub_pattern_format_t* pattern_format, zzub_plugin_t* plugin, int group, int track, int column);
zzub_pattern_format_column_iterator_t* zzub_pattern_format_get_iterator(zzub_pattern_format_t* pattern_format);
zzub_pattern_format_column_t* zzub_pattern_format_get_column(zzub_pattern_format_t* pattern_format, zzub_plugin_t* plugin, int group, int track, int column);
const char* zzub_pattern_format_get_name(zzub_pattern_format_t* pattern_format);
void zzub_pattern_format_set_name(zzub_pattern_format_t* pattern_format, const char* name);
int zzub_pattern_format_get_id(zzub_pattern_format_t* pattern_format);
void zzub_pattern_format_set_track_name(zzub_pattern_format_t* pattern_format, zzub_plugin_t* plugin, int group, int track, const char* name);
const char* zzub_pattern_format_get_track_name(zzub_pattern_format_t* pattern_format, zzub_plugin_t* plugin, int group, int track);
void zzub_pattern_format_set_track_mute(zzub_pattern_format_t* pattern_format, zzub_plugin_t* plugin, int group, int track, int state);
int zzub_pattern_format_get_track_mute(zzub_pattern_format_t* pattern_format, zzub_plugin_t* plugin, int group, int track);
void zzub_pattern_format_add_column_filter(zzub_pattern_format_t* pattern_format, zzub_plugin_t* plugin, int group, int track, int column, zzub_pattern_format_t* filterformat);
void zzub_pattern_format_remove_column_filter(zzub_pattern_format_t* pattern_format, zzub_plugin_t* plugin, int group, int track, int column, zzub_pattern_format_t* filterformat);
zzub_pattern_format_iterator_t* zzub_pattern_format_get_column_filters(zzub_pattern_format_t* pattern_format, zzub_plugin_t* plugin, int group, int track, int column);
int zzub_pattern_format_get_scroller_width(zzub_pattern_format_t* pattern_format);
void zzub_pattern_format_set_scroller_width(zzub_pattern_format_t* pattern_format, int width);
void zzub_pattern_format_destroy(zzub_pattern_format_t* pattern_format);

/* class PatternFormatIterator */

void zzub_pattern_format_iterator_next(zzub_pattern_format_iterator_t* pattern_format_iterator);
int zzub_pattern_format_iterator_valid(zzub_pattern_format_iterator_t* pattern_format_iterator);
zzub_pattern_format_t* zzub_pattern_format_iterator_current(zzub_pattern_format_iterator_t* pattern_format_iterator);
void zzub_pattern_format_iterator_destroy(zzub_pattern_format_iterator_t* pattern_format_iterator);

/* class PatternFormatColumn */

zzub_plugin_t* zzub_pattern_format_column_get_plugin(zzub_pattern_format_column_t* pattern_format_column);
int zzub_pattern_format_column_get_group(zzub_pattern_format_column_t* pattern_format_column);
int zzub_pattern_format_column_get_track(zzub_pattern_format_column_t* pattern_format_column);
int zzub_pattern_format_column_get_column(zzub_pattern_format_column_t* pattern_format_column);
zzub_pattern_format_t* zzub_pattern_format_column_get_format(zzub_pattern_format_column_t* pattern_format_column);
int zzub_pattern_format_column_get_mode(zzub_pattern_format_column_t* pattern_format_column);
void zzub_pattern_format_column_set_mode(zzub_pattern_format_column_t* pattern_format_column, int mode);
int zzub_pattern_format_column_get_collapsed(zzub_pattern_format_column_t* pattern_format_column);
void zzub_pattern_format_column_set_collapsed(zzub_pattern_format_column_t* pattern_format_column, int is_collapsed);
int zzub_pattern_format_column_get_index(zzub_pattern_format_column_t* pattern_format_column);
void zzub_pattern_format_column_set_index(zzub_pattern_format_column_t* pattern_format_column, int idx);

/* class PatternFormatColumnIterator */

void zzub_pattern_format_column_iterator_next(zzub_pattern_format_column_iterator_t* pattern_format_column_iterator);
int zzub_pattern_format_column_iterator_valid(zzub_pattern_format_column_iterator_t* pattern_format_column_iterator);
zzub_pattern_format_column_t* zzub_pattern_format_column_iterator_current(zzub_pattern_format_column_iterator_t* pattern_format_column_iterator);
void zzub_pattern_format_column_iterator_destroy(zzub_pattern_format_column_iterator_t* pattern_format_column_iterator);

/* class Parameter */

int zzub_parameter_get_type(zzub_parameter_t* parameter);
const char* zzub_parameter_get_name(zzub_parameter_t* parameter);
const char* zzub_parameter_get_description(zzub_parameter_t* parameter);
int zzub_parameter_get_value_min(zzub_parameter_t* parameter);
int zzub_parameter_get_value_max(zzub_parameter_t* parameter);
int zzub_parameter_get_value_none(zzub_parameter_t* parameter);
int zzub_parameter_get_value_default(zzub_parameter_t* parameter);
int zzub_parameter_get_flags(zzub_parameter_t* parameter);

/* class Attribute */

const char* zzub_attribute_get_name(zzub_attribute_t* attribute);
int zzub_attribute_get_value_min(zzub_attribute_t* attribute);
int zzub_attribute_get_value_max(zzub_attribute_t* attribute);
int zzub_attribute_get_value_default(zzub_attribute_t* attribute);

/* class Pluginloader */

const char* zzub_pluginloader_get_name(zzub_pluginloader_t* pluginloader);
const char* zzub_pluginloader_get_short_name(zzub_pluginloader_t* pluginloader);
int zzub_pluginloader_get_parameter_count(zzub_pluginloader_t* pluginloader, int group);
zzub_parameter_t* zzub_pluginloader_get_parameter(zzub_pluginloader_t* pluginloader, int group, int index);
int zzub_pluginloader_get_attribute_count(zzub_pluginloader_t* pluginloader);
zzub_attribute_t* zzub_pluginloader_get_attribute(zzub_pluginloader_t* pluginloader, int index);
int zzub_pluginloader_get_flags(zzub_pluginloader_t* pluginloader);
const char* zzub_pluginloader_get_uri(zzub_pluginloader_t* pluginloader);
const char* zzub_pluginloader_get_author(zzub_pluginloader_t* pluginloader);
int zzub_pluginloader_get_instrument_list(zzub_pluginloader_t* pluginloader, char* result, int maxbytes);
int zzub_pluginloader_get_tracks_min(zzub_pluginloader_t* pluginloader);
int zzub_pluginloader_get_tracks_max(zzub_pluginloader_t* pluginloader);
int zzub_pluginloader_get_stream_format_count(zzub_pluginloader_t* pluginloader);
const char* zzub_pluginloader_get_stream_format_ext(zzub_pluginloader_t* pluginloader, int index);
int zzub_pluginloader_get_output_channel_count(zzub_pluginloader_t* pluginloader);
int zzub_pluginloader_get_input_channel_count(zzub_pluginloader_t* pluginloader);
const char* zzub_pluginloader_get_plugin_file(zzub_pluginloader_t* pluginloader);
zzub_plugincollection_t* zzub_pluginloader_get_plugincollection(zzub_pluginloader_t* pluginloader);

/* class Plugin */

int zzub_plugin_destroy(zzub_plugin_t* plugin);
int zzub_plugin_load(zzub_plugin_t* plugin, zzub_input_t* input);
int zzub_plugin_save(zzub_plugin_t* plugin, zzub_output_t* ouput);
int zzub_plugin_set_name(zzub_plugin_t* plugin, const char* name);
const char* zzub_plugin_get_name(zzub_plugin_t* plugin);
int zzub_plugin_get_id(zzub_plugin_t* plugin);
float zzub_plugin_get_position_x(zzub_plugin_t* plugin);
float zzub_plugin_get_position_y(zzub_plugin_t* plugin);
void zzub_plugin_set_position(zzub_plugin_t* plugin, float x, float y);
void zzub_plugin_set_position_direct(zzub_plugin_t* plugin, float x, float y);
int zzub_plugin_get_flags(zzub_plugin_t* plugin);
int zzub_plugin_get_track_count(zzub_plugin_t* plugin, int group);
void zzub_plugin_set_track_count(zzub_plugin_t* plugin, int count);
int zzub_plugin_get_mute(zzub_plugin_t* plugin);
void zzub_plugin_set_mute(zzub_plugin_t* plugin, int muted);
int zzub_plugin_get_bypass(zzub_plugin_t* plugin);
void zzub_plugin_set_bypass(zzub_plugin_t* plugin, int muted);
int zzub_plugin_get_minimize(zzub_plugin_t* plugin);
void zzub_plugin_set_minimize(zzub_plugin_t* plugin, int minimized);
void zzub_plugin_configure(zzub_plugin_t* plugin, const char* key, const char* value);
int zzub_plugin_get_commands(zzub_plugin_t* plugin, char* commands, int maxlen);
int zzub_plugin_get_sub_commands(zzub_plugin_t* plugin, int i, char* commands, int maxlen);
void zzub_plugin_command(zzub_plugin_t* plugin, int i);
zzub_pluginloader_t* zzub_plugin_get_pluginloader(zzub_plugin_t* plugin);
int zzub_plugin_get_midi_output_device_count(zzub_plugin_t* plugin);
const char* zzub_plugin_get_midi_output_device(zzub_plugin_t* plugin, int index);
int zzub_plugin_get_envelope_count(zzub_plugin_t* plugin);
int zzub_plugin_get_envelope_flags(zzub_plugin_t* plugin, int index);
const char* zzub_plugin_get_envelope_name(zzub_plugin_t* plugin, int index);
void zzub_plugin_set_stream_source(zzub_plugin_t* plugin, const char* resource);
const char* zzub_plugin_get_stream_source(zzub_plugin_t* plugin);
int zzub_plugin_set_instrument(zzub_plugin_t* plugin, const char* name);
const char* zzub_plugin_describe_value(zzub_plugin_t* plugin, int group, int column, int value);
int zzub_plugin_get_parameter_value(zzub_plugin_t* plugin, int group, int track, int column);
void zzub_plugin_set_parameter_value(zzub_plugin_t* plugin, int group, int track, int column, int value, int record);
void zzub_plugin_set_parameter_value_direct(zzub_plugin_t* plugin, int group, int track, int column, int value, int record);
int zzub_plugin_get_parameter_count(zzub_plugin_t* plugin, int group, int track);
zzub_parameter_t* zzub_plugin_get_parameter(zzub_plugin_t* plugin, int group, int track, int column);
int zzub_plugin_get_parameter_interpolator(zzub_plugin_t* plugin, int group, int track, int column);
void zzub_plugin_set_parameter_interpolator(zzub_plugin_t* plugin, int group, int track, int column, int mode);
int zzub_plugin_get_input_connection_count(zzub_plugin_t* plugin);
zzub_connection_t* zzub_plugin_get_input_connection(zzub_plugin_t* plugin, int index);
zzub_connection_t* zzub_plugin_get_input_connection_by_type(zzub_plugin_t* plugin, zzub_plugin_t* from_plugin, int type);
int zzub_plugin_get_output_connection_count(zzub_plugin_t* plugin);
zzub_connection_t* zzub_plugin_get_output_connection(zzub_plugin_t* plugin, int index);
zzub_connection_t* zzub_plugin_get_output_connection_by_type(zzub_plugin_t* plugin, zzub_plugin_t* from_plugin, int type);
zzub_connection_t* zzub_plugin_create_audio_connection(zzub_plugin_t* plugin, zzub_plugin_t* from_plugin, int first_input, int input_count, int first_output, int output_count);
zzub_connection_t* zzub_plugin_create_midi_connection(zzub_plugin_t* plugin, zzub_plugin_t* from_plugin, const char* midi_device);
zzub_connection_t* zzub_plugin_create_event_connection(zzub_plugin_t* plugin, zzub_plugin_t* from_plugin);
zzub_connection_t* zzub_plugin_create_note_connection(zzub_plugin_t* plugin, zzub_plugin_t* from_plugin);
float zzub_plugin_get_last_peak(zzub_plugin_t* plugin, int channel);
double zzub_plugin_get_last_cpu_load(zzub_plugin_t* plugin);
int zzub_plugin_get_last_midi_result(zzub_plugin_t* plugin);
int zzub_plugin_get_last_audio_result(zzub_plugin_t* plugin);
void zzub_plugin_tick(zzub_plugin_t* plugin, int immediate);
int zzub_plugin_get_attribute_value(zzub_plugin_t* plugin, int index);
void zzub_plugin_set_attribute_value(zzub_plugin_t* plugin, int index, int value);
void zzub_plugin_play_midi_note(zzub_plugin_t* plugin, int note, int prevNote, int velocity);
void zzub_plugin_set_timesource(zzub_plugin_t* plugin, zzub_plugin_t* timesource, int group, int track);
zzub_plugin_t* zzub_plugin_get_timesource_plugin(zzub_plugin_t* plugin);
int zzub_plugin_get_timesource_group(zzub_plugin_t* plugin);
int zzub_plugin_get_timesource_track(zzub_plugin_t* plugin);
int zzub_plugin_get_output_channel_count(zzub_plugin_t* plugin);
int zzub_plugin_get_input_channel_count(zzub_plugin_t* plugin);
const char* zzub_plugin_get_output_channel_name(zzub_plugin_t* plugin, int index);
const char* zzub_plugin_get_input_channel_name(zzub_plugin_t* plugin, int index);
int zzub_plugin_get_encoder_digest(zzub_plugin_t* plugin, int type, float** buffers, int numsamples);
zzub_connection_t* zzub_plugin_get_connection(zzub_plugin_t* plugin);
int zzub_plugin_has_embedded_gui(zzub_plugin_t* plugin);
int zzub_plugin_create_embedded_gui(zzub_plugin_t* plugin, void* hwnd);
void zzub_plugin_resize_embedded_gui(zzub_plugin_t* plugin, void* hwnd, int* width, int* height);
void zzub_plugin_set_latency(zzub_plugin_t* plugin, int samplecount);
int zzub_plugin_get_latency(zzub_plugin_t* plugin);
int zzub_plugin_get_latency_actual(zzub_plugin_t* plugin);
zzub_plugin_group_t* zzub_plugin_get_plugin_group(zzub_plugin_t* plugin);
void zzub_plugin_set_plugin_group(zzub_plugin_t* plugin, zzub_plugin_group_t* group);

/* class PluginIterator */

void zzub_plugin_iterator_next(zzub_plugin_iterator_t* plugin_iterator);
int zzub_plugin_iterator_valid(zzub_plugin_iterator_t* plugin_iterator);
zzub_plugin_t* zzub_plugin_iterator_current(zzub_plugin_iterator_t* plugin_iterator);
void zzub_plugin_iterator_destroy(zzub_plugin_iterator_t* plugin_iterator);

/* class Connection */

void zzub_connection_destroy(zzub_connection_t* connection);
int zzub_connection_get_type(zzub_connection_t* connection);
zzub_plugin_t* zzub_connection_get_from_plugin(zzub_connection_t* connection);
zzub_plugin_t* zzub_connection_get_to_plugin(zzub_connection_t* connection);
zzub_plugin_t* zzub_connection_get_connection_plugin(zzub_connection_t* connection);
int zzub_connection_get_first_input(zzub_connection_t* connection);
void zzub_connection_set_first_input(zzub_connection_t* connection, int value);
int zzub_connection_get_input_count(zzub_connection_t* connection);
void zzub_connection_set_input_count(zzub_connection_t* connection, int value);
int zzub_connection_get_first_output(zzub_connection_t* connection);
void zzub_connection_set_first_output(zzub_connection_t* connection, int value);
int zzub_connection_get_output_count(zzub_connection_t* connection);
void zzub_connection_set_output_count(zzub_connection_t* connection, int value);
void zzub_connection_set_midi_device(zzub_connection_t* connection, const char* midi_device);
const char* zzub_connection_get_midi_device(zzub_connection_t* connection);
int zzub_connection_get_event_binding_count(zzub_connection_t* connection);
void zzub_connection_add_event_connection_binding(zzub_connection_t* connection, int sourceparam, int targetgroup, int targettrack, int targetparam);
void zzub_connection_remove_event_connection_binding(zzub_connection_t* connection, int sourceparam, int targetgroup, int targettrack, int targetparam);
zzub_connection_binding_iterator_t* zzub_connection_get_event_binding_iterator(zzub_connection_t* connection);

/* class ConnectionBinding */

zzub_connection_t* zzub_connection_binding_get_connection(zzub_connection_binding_t* connection_binding);
int zzub_connection_binding_get_source_column(zzub_connection_binding_t* connection_binding);
int zzub_connection_binding_get_target_group(zzub_connection_binding_t* connection_binding);
int zzub_connection_binding_get_target_track(zzub_connection_binding_t* connection_binding);
int zzub_connection_binding_get_target_column(zzub_connection_binding_t* connection_binding);

/* class ConnectionBindingIterator */

void zzub_connection_binding_iterator_next(zzub_connection_binding_iterator_t* connection_binding_iterator);
int zzub_connection_binding_iterator_valid(zzub_connection_binding_iterator_t* connection_binding_iterator);
zzub_connection_binding_t* zzub_connection_binding_iterator_current(zzub_connection_binding_iterator_t* connection_binding_iterator);
void zzub_connection_binding_iterator_reset(zzub_connection_binding_iterator_t* connection_binding_iterator);
void zzub_connection_binding_iterator_destroy(zzub_connection_binding_iterator_t* connection_binding_iterator);

/* class Wave */

int zzub_wave_get_id(zzub_wave_t* wave);
int zzub_wave_get_index(zzub_wave_t* wave);
int zzub_wave_clear(zzub_wave_t* wave);
const char* zzub_wave_get_name(zzub_wave_t* wave);
void zzub_wave_set_name(zzub_wave_t* wave, const char* name);
const char* zzub_wave_get_path(zzub_wave_t* wave);
void zzub_wave_set_path(zzub_wave_t* wave, const char* path);
int zzub_wave_get_flags(zzub_wave_t* wave);
void zzub_wave_set_flags(zzub_wave_t* wave, int flags);
float zzub_wave_get_volume(zzub_wave_t* wave);
void zzub_wave_set_volume(zzub_wave_t* wave, float volume);
int zzub_wave_get_envelope_count(zzub_wave_t* wave);
void zzub_wave_set_envelope_count(zzub_wave_t* wave, int count);
zzub_envelope_t* zzub_wave_get_envelope(zzub_wave_t* wave, int index);
void zzub_wave_set_envelope(zzub_wave_t* wave, int index, zzub_envelope_t* env);
int zzub_wave_get_level_count(zzub_wave_t* wave);
zzub_wavelevel_t* zzub_wave_get_level(zzub_wave_t* wave, int index);
zzub_wavelevel_t* zzub_wave_add_level(zzub_wave_t* wave);
void zzub_wave_remove_level(zzub_wave_t* wave, int level);

/* class Wavelevel */

int zzub_wavelevel_get_id(zzub_wavelevel_t* wavelevel);
zzub_wave_t* zzub_wavelevel_get_wave(zzub_wavelevel_t* wavelevel);
int zzub_wavelevel_clear(zzub_wavelevel_t* wavelevel);
int zzub_wavelevel_get_sample_count(zzub_wavelevel_t* wavelevel);
void zzub_wavelevel_set_sample_count(zzub_wavelevel_t* wavelevel, int count);
int zzub_wavelevel_get_root_note(zzub_wavelevel_t* wavelevel);
void zzub_wavelevel_set_root_note(zzub_wavelevel_t* wavelevel, int note);
int zzub_wavelevel_get_samples_per_second(zzub_wavelevel_t* wavelevel);
void zzub_wavelevel_set_samples_per_second(zzub_wavelevel_t* wavelevel, int sps);
int zzub_wavelevel_get_loop_start(zzub_wavelevel_t* wavelevel);
void zzub_wavelevel_set_loop_start(zzub_wavelevel_t* wavelevel, int pos);
int zzub_wavelevel_get_loop_end(zzub_wavelevel_t* wavelevel);
void zzub_wavelevel_set_loop_end(zzub_wavelevel_t* wavelevel, int pos);
int zzub_wavelevel_get_format(zzub_wavelevel_t* wavelevel);
void zzub_wavelevel_set_format(zzub_wavelevel_t* wavelevel, int format);
int zzub_wavelevel_load_wav(zzub_wavelevel_t* wavelevel, int offset, int clear, zzub_input_t* datastream);
int zzub_wavelevel_save_wav(zzub_wavelevel_t* wavelevel, zzub_output_t* datastream);
int zzub_wavelevel_save_wav_range(zzub_wavelevel_t* wavelevel, zzub_output_t* datastream, int start, int numsamples);
void zzub_wavelevel_insert_sample_range(zzub_wavelevel_t* wavelevel, int start, void* buffer, int channels, int format, int numsamples);
void zzub_wavelevel_remove_sample_range(zzub_wavelevel_t* wavelevel, int start, int numsamples);
void zzub_wavelevel_replace_sample_range(zzub_wavelevel_t* wavelevel, int start, void* buffer, int channels, int format, int numsamples);
void zzub_wavelevel_get_samples_digest(zzub_wavelevel_t* wavelevel, int channel, int start, int end, float* mindigest, float* maxdigest, float* ampdigest, int digestsize);
void zzub_wavelevel_get_slices(zzub_wavelevel_t* wavelevel, int* slicecount, int* slices);
void zzub_wavelevel_set_slices(zzub_wavelevel_t* wavelevel, int slicecount, const int* slices);
void zzub_wavelevel_process_sample_range_offline(zzub_wavelevel_t* wavelevel, int start, int numsamples, zzub_plugin_t* plugin);

/* class Envelope */

unsigned short zzub_envelope_get_attack(zzub_envelope_t* envelope);
unsigned short zzub_envelope_get_decay(zzub_envelope_t* envelope);
unsigned short zzub_envelope_get_sustain(zzub_envelope_t* envelope);
unsigned short zzub_envelope_get_release(zzub_envelope_t* envelope);
void zzub_envelope_set_attack(zzub_envelope_t* envelope, unsigned short attack);
void zzub_envelope_set_decay(zzub_envelope_t* envelope, unsigned short decay);
void zzub_envelope_set_sustain(zzub_envelope_t* envelope, unsigned short sustain);
void zzub_envelope_set_release(zzub_envelope_t* envelope, unsigned short release);
char zzub_envelope_get_subdivision(zzub_envelope_t* envelope);
void zzub_envelope_set_subdivision(zzub_envelope_t* envelope, char subdiv);
char zzub_envelope_get_flags(zzub_envelope_t* envelope);
void zzub_envelope_set_flags(zzub_envelope_t* envelope, char flags);
int zzub_envelope_is_enabled(zzub_envelope_t* envelope);
void zzub_envelope_enable(zzub_envelope_t* envelope, int enable);
int zzub_envelope_get_point_count(zzub_envelope_t* envelope);
void zzub_envelope_get_point(zzub_envelope_t* envelope, int index, unsigned short* x, unsigned short* y, char* flags);
void zzub_envelope_set_point(zzub_envelope_t* envelope, int index, unsigned short x, unsigned short y, char flags);
void zzub_envelope_insert_point(zzub_envelope_t* envelope, int index);
void zzub_envelope_delete_point(zzub_envelope_t* envelope, int index);

/* class Mixer */


/* class ValidationErrorIterator */

void zzub_validation_error_iterator_next(zzub_validation_error_iterator_t* validation_error_iterator);
int zzub_validation_error_iterator_valid(zzub_validation_error_iterator_t* validation_error_iterator);
zzub_validation_error_t* zzub_validation_error_iterator_current(zzub_validation_error_iterator_t* validation_error_iterator);
void zzub_validation_error_iterator_reset(zzub_validation_error_iterator_t* validation_error_iterator);
void zzub_validation_error_iterator_destroy(zzub_validation_error_iterator_t* validation_error_iterator);

/* class ValidationError */

int zzub_validation_error_get_type(zzub_validation_error_t* validation_error);
int zzub_validation_error_get_group(zzub_validation_error_t* validation_error);
int zzub_validation_error_get_column(zzub_validation_error_t* validation_error);
int zzub_validation_error_get_found_value(zzub_validation_error_t* validation_error);
int zzub_validation_error_get_expected_value(zzub_validation_error_t* validation_error);
const char* zzub_validation_error_get_parameter_name(zzub_validation_error_t* validation_error);
const char* zzub_validation_error_get_plugin_name(zzub_validation_error_t* validation_error);
zzub_pluginloader_t* zzub_validation_error_get_pluginloader(zzub_validation_error_t* validation_error);

/* class Player */

zzub_player_t* zzub_player_create(const char* hostpath, const char* userpath, const char* temppath);
void zzub_player_destroy(zzub_player_t* player);
int zzub_player_initialize(zzub_player_t* player, int samplesPerSecond);
int zzub_player_remote_connect(zzub_player_t* player, const char* host, const char* port);
void zzub_player_remote_disconnect(zzub_player_t* player);
int zzub_player_remote_open(zzub_player_t* player, const char* project, const char* password);
int zzub_player_remote_create(zzub_player_t* player, const char* project, const char* password);
int zzub_player_remote_delete(zzub_player_t* player, const char* project, const char* password);
int zzub_player_get_remote_client_count(zzub_player_t* player);
int zzub_player_is_remote_connected(zzub_player_t* player);
int zzub_player_load_armz(zzub_player_t* player, const char* fileName, int mode, zzub_plugin_group_t* plugingroup);
int zzub_player_save_armz(zzub_player_t* player, const char* fileName, const zzub_plugin_t** plugins, int plugincount, zzub_plugin_group_t* plugingroup);
int zzub_player_load_bmx(zzub_player_t* player, zzub_input_t* datastream, int flags, float x, float y);
int zzub_player_load_module(zzub_player_t* player, const char* fileName);
zzub_validation_error_iterator_t* zzub_player_get_validation_errors(zzub_player_t* player);
int zzub_player_get_state(zzub_player_t* player);
void zzub_player_set_state(zzub_player_t* player, int state, int stoprow);
int zzub_player_get_pluginloader_count(zzub_player_t* player);
zzub_pluginloader_t* zzub_player_get_pluginloader(zzub_player_t* player, int index);
zzub_pluginloader_t* zzub_player_get_pluginloader_by_name(zzub_player_t* player, const char* name);
int zzub_player_get_plugin_count(zzub_player_t* player);
zzub_midimapping_t* zzub_player_add_midimapping(zzub_plugin_t* plugin, int group, int track, int param, int channel, int controller);
int zzub_player_remove_midimapping(zzub_plugin_t* plugin, int group, int track, int param);
zzub_plugin_t* zzub_player_get_plugin_by_name(zzub_player_t* player, const char* name);
zzub_plugin_t* zzub_player_get_plugin_by_id(zzub_player_t* player, int id);
zzub_plugin_t* zzub_player_get_plugin(zzub_player_t* player, int index);
zzub_plugin_iterator_t* zzub_player_get_plugin_iterator(zzub_player_t* player);
zzub_pattern_iterator_t* zzub_player_get_pattern_iterator(zzub_player_t* player);
zzub_pattern_t* zzub_player_get_pattern_by_id(zzub_player_t* player, int id);
zzub_pattern_t* zzub_player_get_pattern_by_index(zzub_player_t* player, int index);
zzub_pattern_event_t* zzub_player_get_pattern_event_by_id(zzub_player_t* player, int id);
const char* zzub_player_get_new_pattern_name(zzub_player_t* player, zzub_pattern_format_t* format, const char* description);
int zzub_player_get_pattern_count(zzub_player_t* player);
zzub_pattern_t* zzub_player_get_pattern_by_name(zzub_player_t* player, const char* name);
int zzub_player_get_pattern_format_count(zzub_player_t* player);
const char* zzub_player_get_new_pattern_format_name(zzub_player_t* player, const char* description);
zzub_pattern_format_t* zzub_player_get_pattern_format_by_name(zzub_player_t* player, const char* name);
zzub_pattern_format_t* zzub_player_get_pattern_format_by_index(zzub_player_t* player, int index);
zzub_pattern_format_t* zzub_player_get_pattern_format_by_id(zzub_player_t* player, int id);
zzub_pattern_format_iterator_t* zzub_player_get_pattern_format_iterator(zzub_player_t* player);
void zzub_player_work_stereo(zzub_player_t* player, const float** inbuffers, float** outbuffers, int inchannels, int outchannels, int numsamples);
void zzub_player_clear(zzub_player_t* player);
int zzub_player_get_wave_count(zzub_player_t* player);
zzub_wave_t* zzub_player_get_wave(zzub_player_t* player, int index);
void zzub_player_add_callback(zzub_player_t* player, zzub_callback_t callback, void* tag);
void zzub_player_remove_callback(zzub_player_t* player, zzub_callback_t callback, void* tag);
void zzub_player_handle_events(zzub_player_t* player);
zzub_midimapping_t* zzub_player_get_midimapping(zzub_player_t* player, int index);
int zzub_player_get_midimapping_count(zzub_player_t* player);
int zzub_player_get_automation(zzub_player_t* player);
void zzub_player_set_automation(zzub_player_t* player, int enable);
int zzub_player_get_midi_transport(zzub_player_t* player);
void zzub_player_set_midi_transport(zzub_player_t* player, int enable);
const char* zzub_player_get_infotext(zzub_player_t* player);
void zzub_player_set_infotext(zzub_player_t* player, const char* text);
void zzub_player_set_midi_plugin(zzub_player_t* player, zzub_plugin_t* plugin);
zzub_plugin_t* zzub_player_get_midi_plugin(zzub_player_t* player);
int zzub_player_get_midi_lock(zzub_player_t* player);
void zzub_player_set_midi_lock(zzub_player_t* player, int state);
const char* zzub_player_get_new_plugin_name(zzub_player_t* player, const char* uri);
void zzub_player_reset_keyjazz(zzub_player_t* player);
zzub_plugin_t* zzub_player_create_plugin(zzub_player_t* player, zzub_input_t* input, int dataSize, const char* instanceName, zzub_pluginloader_t* loader, zzub_plugin_group_t* group);
zzub_pattern_t* zzub_player_create_pattern(zzub_player_t* player, zzub_pattern_format_t* format, const char* description, int rows);
zzub_pattern_t* zzub_player_clone_pattern(zzub_player_t* player, zzub_pattern_t* pattern, const char* description);
zzub_pattern_format_t* zzub_player_create_pattern_format(zzub_player_t* player, const char* description);
zzub_pattern_format_t* zzub_player_clone_pattern_format(zzub_player_t* player, zzub_pattern_format_t* format, const char* description);
void zzub_player_undo(zzub_player_t* player);
void zzub_player_redo(zzub_player_t* player);
int zzub_player_history_enable(zzub_player_t* player, int state);
void zzub_player_history_begin(zzub_player_t* player, void* userdata);
void zzub_player_history_commit(zzub_player_t* player, int redo_id, int undo_id, const char* description);
int zzub_player_history_get_uncomitted_operations(zzub_player_t* player);
void zzub_player_history_reset(zzub_player_t* player);
int zzub_player_history_get_size(zzub_player_t* player);
int zzub_player_history_get_position(zzub_player_t* player);
const char* zzub_player_history_get_description(zzub_player_t* player, int position);
void zzub_player_set_host_info(zzub_player_t* player, int id, int version, void* host_ptr);
int zzub_player_invoke_event(zzub_player_t* player, zzub_event_data_t* data, int immediate);
void zzub_player_set_order_length(zzub_player_t* player, int length);
int zzub_player_get_order_length(zzub_player_t* player);
void zzub_player_set_order_pattern(zzub_player_t* player, int index, zzub_pattern_t* pattern);
zzub_pattern_t* zzub_player_get_order_pattern(zzub_player_t* player, int index);
zzub_pattern_iterator_t* zzub_player_get_order_iterator(zzub_player_t* player);
int zzub_player_get_order_loop_start(zzub_player_t* player);
void zzub_player_set_order_loop_start(zzub_player_t* player, int pos);
int zzub_player_get_order_loop_end(zzub_player_t* player);
void zzub_player_set_order_loop_end(zzub_player_t* player, int pos);
int zzub_player_get_order_loop_enabled(zzub_player_t* player);
void zzub_player_set_order_loop_enabled(zzub_player_t* player, int enable);
void zzub_player_set_queue_order_index(zzub_player_t* player, int pos);
int zzub_player_get_queue_order_index(zzub_player_t* player);
void zzub_player_timeshift_order(zzub_player_t* player, int fromindex, int timeshift);
int zzub_player_get_position_order(zzub_player_t* player);
int zzub_player_get_position_row(zzub_player_t* player);
int zzub_player_get_position_samples(zzub_player_t* player);
void zzub_player_set_position(zzub_player_t* player, int orderindex, int tick);
void zzub_player_adjust_position_order(zzub_player_t* player, int orderindex);
float zzub_player_get_bpm(zzub_player_t* player);
int zzub_player_get_tpb(zzub_player_t* player);
float zzub_player_get_swing(zzub_player_t* player);
void zzub_player_set_bpm(zzub_player_t* player, float bpm);
void zzub_player_set_tpb(zzub_player_t* player, int tpb);
void zzub_player_set_swing(zzub_player_t* player, float swing);
void zzub_player_set_swing_ticks(zzub_player_t* player, int swing_ticks);
int zzub_player_get_timesource_count(zzub_player_t* player);
zzub_plugin_t* zzub_player_get_timesource_plugin(zzub_player_t* player, int index);
int zzub_player_get_timesource_group(zzub_player_t* player, int index);
int zzub_player_get_timesource_track(zzub_player_t* player, int index);
void zzub_player_play_pattern(zzub_player_t* player, zzub_pattern_t* pat, int row, int stoprow);
double zzub_player_get_machineview_offset_x(zzub_player_t* player);
double zzub_player_get_machineview_offset_y(zzub_player_t* player);
void zzub_player_set_machineview_offset(zzub_player_t* player, double x, double y);
int zzub_player_get_thread_count(zzub_player_t* player);
void zzub_player_set_thread_count(zzub_player_t* player, int threads);
void zzub_player_get_peaks(zzub_player_t* player, float* peaks, int* peakcount);
int zzub_player_get_waveimporter_count(zzub_player_t* player);
int zzub_player_get_waveimporter_format_ext_count(zzub_player_t* player, int index);
const char* zzub_player_get_waveimporter_format_ext(zzub_player_t* player, int index, int extindex);
int zzub_player_get_waveimporter_format_is_container(zzub_player_t* player, int index);
int zzub_player_get_waveimporter_format_type(zzub_player_t* player, int index);
zzub_wave_importer_t* zzub_player_create_waveimporter(zzub_player_t* player, int index);
zzub_wave_importer_t* zzub_player_create_waveimporter_by_file(zzub_player_t* player, const char* filename);
zzub_plugin_group_t* zzub_player_create_plugin_group(zzub_player_t* player, zzub_plugin_group_t* parent, const char* name);
zzub_plugin_group_t* zzub_player_get_plugin_group_by_id(zzub_player_t* player, int id);
zzub_plugin_group_iterator_t* zzub_player_get_plugin_group_iterator(zzub_player_t* player, zzub_plugin_group_t* parent);

/* class PluginGroup */

void zzub_plugin_group_destroy(zzub_plugin_group_t* plugin_group);
int zzub_plugin_group_get_id(zzub_plugin_group_t* plugin_group);
const char* zzub_plugin_group_get_name(zzub_plugin_group_t* plugin_group);
void zzub_plugin_group_set_name(zzub_plugin_group_t* plugin_group, const char* name);
zzub_plugin_group_t* zzub_plugin_group_get_parent(zzub_plugin_group_t* plugin_group);
void zzub_plugin_group_set_parent(zzub_plugin_group_t* plugin_group, zzub_plugin_group_t* newparent);
float zzub_plugin_group_get_position_x(zzub_plugin_group_t* plugin_group);
float zzub_plugin_group_get_position_y(zzub_plugin_group_t* plugin_group);
void zzub_plugin_group_set_position(zzub_plugin_group_t* plugin_group, float x, float y);
zzub_plugin_iterator_t* zzub_plugin_group_get_plugins(zzub_plugin_group_t* plugin_group);

/* class PluginGroupIterator */

void zzub_plugin_group_iterator_next(zzub_plugin_group_iterator_t* plugin_group_iterator);
int zzub_plugin_group_iterator_valid(zzub_plugin_group_iterator_t* plugin_group_iterator);
zzub_plugin_group_t* zzub_plugin_group_iterator_current(zzub_plugin_group_iterator_t* plugin_group_iterator);
void zzub_plugin_group_iterator_destroy(zzub_plugin_group_iterator_t* plugin_group_iterator);

/* class WaveImporter */

int zzub_wave_importer_open(zzub_wave_importer_t* wave_importer, const char* filename, zzub_input_t* strm);
void zzub_wave_importer_destroy(zzub_wave_importer_t* wave_importer);
int zzub_wave_importer_get_instrument_count(zzub_wave_importer_t* wave_importer);
const char* zzub_wave_importer_get_instrument_name(zzub_wave_importer_t* wave_importer, int index);
int zzub_wave_importer_get_instrument_sample_count(zzub_wave_importer_t* wave_importer, int index);
void zzub_wave_importer_get_instrument_sample_info(zzub_wave_importer_t* wave_importer, int index, int sample, char* name, int namelen, int* samplecount, int* channels, int* format, int* samplerate);
int zzub_wave_importer_load_instrument(zzub_wave_importer_t* wave_importer, int index, zzub_wave_t* dest);
int zzub_wave_importer_load_instrument_sample(zzub_wave_importer_t* wave_importer, int index, int sample, zzub_wavelevel_t* dest);

#if defined(__cplusplus)
} // extern "C"
#endif

#endif // __zzub_H
